{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction 本书主要是介绍关于一些软件的设置与使用方法 资源推荐 Sublime 简易教程 Markdown 简易教程 Gitbook 简易教程 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"software/":{"url":"software/","title":"资源推荐","keywords":"","body":"资源推荐 本章节主要是记录工作与生活中遇到的一些觉得比较好的软件与网站 本人主要的软件来源主要是以下网站，大家可以从中去寻找适合自己的：[1]异次元[2]小众软件[3]善用佳软：前期文章很好[4]酷市场：评论很有意思，可以从中寻找好的软件[5]绿盟：免安装版本主要下载阵地 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"software/android.html":{"url":"software/android.html","title":"Andirod 推荐名单","keywords":"","body":"Andirod推荐名单 应用市场类 应用名 推荐理由 APKure google应用市场免翻墙下载器 酷市场 国内比较有趣的应用市场，评论区很有意思 效率类 应用名 推荐理由 滴答清单 todo清单 uBhind 远离手机瘾 达目标 达目标 coldturkey 一键锁死手机多久，远离手机瘾 工具类 应用名 推荐理由 一个木函 工具集成软件 ifttt 定时执行任务 绿色守护 手机优化软件 juiceSSH SSH Photo Grid 相片组合编辑、视频拼贴、AR脸部贴图 音频类 应用名 推荐理由 castbox FM 喜马拉雅 FM 轻听 本地音乐播放，纯净舒服、腾讯良心APP voicetube 英语学习APP 阅读类 应用名 推荐理由 inoreader rss阅读器 pocket 稍后阅读 追书神器换源版 评论区寻找换源版 文档信息 版权声明：自由转载-非商用-非衍生-保持署名（创意共享4.0许可证）发表日期： 2018年09月16日修改日期：社交媒体：Github 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"software/windows.html":{"url":"software/windows.html","title":"Windows 推荐名单","keywords":"","body":"Windows推荐名单 思维学习类 软件名 推荐理由 Xmind 国产免费好用 幕布 兼具清单软件和思维导图软件优点的神器 Workflowy 工具类 常用： 软件名 推荐理由 Shadowsocks-4.1.1 ss翻墙 Listary 文件检索类，非常好用，可以结合everything使用 火绒 纯粹的杀毒软件 ScreenToGif 小巧的截图、动图、录像软件 备用： 软件名 推荐理由 bittorrent-sync sync同步工具 Total Commander 比较复杂，建议用Listary替代 Evcapture 视频录制工具 微软小英 微信公众号 英语发音 Collagelt 图片拼接工具 百度图说 在线的可视化图标制作工具 文字云 iSlide PowerPoint软件插件 学习类 软件名 推荐理由 GoldenDict 字典 cmd_markdown_win64 markdown编写软件 pcloud 云端同步软件 wps国际版 纯净WPS Sublime text 2 最好的轻便编辑器 feeddemon windows rss阅读器 可能感兴趣的扩展 反病毒-Powertool 文档信息 版权声明：自由转载-非商用-非衍生-保持署名（创意共享4.0许可证）发表日期： 2018年09月16日修改日期：社交媒体：Github 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"software/internet.html":{"url":"software/internet.html","title":"网站推荐名单","keywords":"","body":"网站推荐名单 PPT类&设计类 网站 主要用途 HippTer OfficePlus 微软office官方PPT模板 牛大拿设计师导航 unsplash 图片资源网站 trianglify 多边形背景图 人人秀 程序猿类 网站 主要用途 前端网（W3Cfuns) 前端开发工程师互动平台 博客 - 伯乐在线 OurCoders (我们程序员) Java并发性和多线程介绍目录-并发编程网 首页-DataCastle大数据竞赛平台 数据城堡参赛代码实战篇 硅谷程序员进阶之路 · GitBook 工具类 网站 主要用途 简道云 用于定制化PRM 虫部落搜索 聚合搜索 二维码生成 PDF压缩 Processon on 流程图在线制作 政府类相关网站 网站 主要用途 非法组织曝光：中国社会组织公共服务台平台曝光台 国务院资格证取消查询 数据网站 网站 主要用途 数据说_中国政府网 智库-中国社会科学 xxx-199IT大数据工具导航 网站历史数据 互联网备份工具 非编程专业类网站 网站 主要用途 A+医学百科, 在线医学百科全书 文档信息 版权声明：自由转载-非商用-非衍生-保持署名（创意共享4.0许可证）发表日期： 2018年09月16日修改日期：社交媒体：Github 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"software/chrome-plugin.html":{"url":"software/chrome-plugin.html","title":"Chrome 插件","keywords":"","body":"Chrome插件 插件 主要用途 Listen 1 包含了网易云音乐，虾米，QQ音乐, 酷狗音乐，酷我音乐的曲库 Adblock Plus 广告拦截-必装神器 广告终结者 广告拦截-必装神器 易撤销(历史关闭助手) 广告拦截 Tampermonkey 油猴-必装神器 为知笔记网页剪辑器 网页截取插件，配合 wiz 笔记 Block Site 限制访问某些网站 油猴脚本 脚本官网：https://greasyfork.org/en 推荐脚本： 百度云百度网盘直接下载助手直链加速版支持迅雷+VIP视频在线解析破解去广告 百度网盘直接下载助手修改版 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"sublime/":{"url":"sublime/","title":"Sublime 简易教程","keywords":"","body":"Sublime简易教程 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"sublime/sublime-base-config.html":{"url":"sublime/sublime-base-config.html","title":"Sublime 初学者教程","keywords":"","body":"Sublime 初学者教程 sublime2 下载与安装 直接到 官网sublime2选择合适的版本下载即可，Windows、 Mac 和 Linux 系统都有。 PS：建议选择 “portable version” 版本以方便后续转移 安装包管理器 sublime2 最新版本默认配置 Package Control，如在 Preferences 中未看到此项，使用 CTRL+ 调出控制台，复制如下 Package Control对应的代码，回车等待安装完成后重启即可 20180911 sublime text2 最新代码 import urllib2,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http：//packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation') 20180911 sublime text3 最新代码 import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http：//packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) 包管理器的使用 使用 CTRL+SHIFT+P 调出命令面板，然后输入 Package Control 会列出相关的命令，如 Install Package、List Packages、Remove Package 等。 选择 Install Package 会列出 https：//sublime.wbond.net/ 网站上的包列表，输入包名称，然后选择即可安装。有时候这个网站打不开，从而等好久都无法列出包列表，需要翻墙过去。 常用插件 Emmet：HTML代码补写 Jquery SublimeCodeIntel：自动补全工具 SideBarInhancements：侧边栏 BracketHighlighter：检查括号匹配 ConvertToUTF8：编码支持 JsFormat：Javascript 的代码格式化插件 LESS：LESS 高亮插件 alignment：等号对齐 docBlock：代码优美注释 Color Highlighter：调色板 Prefixr：CSS3 兼容性 markdown-editing/markdown-previwer：markdown 编辑器 OmniMarkupPreviewer：支持标记语言渲染为 HTML 并在浏览器上实时预览 常用快捷键 选择类 行选择类快捷键： 快捷键 执行动作 shift+↑ 向上选中多行 shift+↓ 向下选中多行 Shift+← 向左选中文本 Shift+→ 向右选中文本 Ctrl+Shift+→ 向右单位性地选中文本 Ctrl+Shift+← 向左单位性地选中文本 Ctrl+Shift+↑ 将光标所在行和上一行代码互换（将光标所在行插入到上一行之前） Ctrl+Shift+↓ 将光标所在行和下一行代码互换（将光标所在行插入到下一行之后） 光标移动类快捷键： 快捷键 执行动作 ctrl+← 向左单位性地移动光标,快速移动光标 ctrl+→ 向右单位性移动光标,快速移动光标 Ctrl+Alt+↑或 Ctrl+Alt+鼠标向上拖动 向上添加多行光标，可同时编辑多行 Ctrl+Alt+↓或Ctrl+Alt+鼠标向下拖动 向下添加多行光标，可同时编辑多行 Ctrl+G 输入行号,可快速跳转该行 Ctrl+p 输入冒号,在输入行号，可快速跳转到某一行 Ctrl+M 光标移动至括号内结束或开始的位置 Ctrl+Shift+M 选择括号内的内容（继续选择父括号） Ctrl+shift+L 先选中多行,在按下快捷键,会在每行行尾插入光标,即可同时编辑这行 同文本选择快捷键： 快捷键 执行动作 Ctrl+D 选中光标所占的文本,继续操作则会选中下一个相同的的文本 Alt+F3 选中文本按下快捷键,即可一次性选择全部相同的文本进行同时编辑 插入和折叠快捷键： 快捷键 执行动作 Ctrl+Enter 在下一行插入新行。举例即使光标不在行尾，也能快速向下插入一行 Ctrl+Shift+Enter 在上一行插入新行。举例即使光标不在行首，也能快速向上插入一行 ctrl+shift+[ 选中代码,按下快捷键,折叠代码 ctrl+shift+] 选中代码,按下快捷键,展开代码 Ctrl+k+0 展开所有折叠代码 多重选择多重选择功能允许在页面中同时存在多个光标,让很多本来需要正则表达式,高级搜索和替换才能完成的的任务也变得游刃有余了 激活多重选择的方法有两种： 按 ctrl 然后在页面中希望中现光标的位置点击选择数行文本,然后按下 shift+ctrl+L 通过反复按下 ctrl+D 即可将全文中与光标当前所在位置的词相同的词逐一加入选择,而直接按下 Alt+F3 即可一次性选择所有相同的词 搜索类 快捷键 执行动作 Ctrl+F 打开底部搜索框，查找关键字 Ctrl+shift+F 在文件夹内查找，sublime 允许添加多个文件夹进行查找 Ctrl+P 打开搜索框，例子 Ctrl+G 打开搜索框，自动带:，输入数字跳转到该行代码 Ctrl+R 打开搜索框，自动带@，输入关键字，查找文件中的函数名 Ctrl+ 打开搜索框，自动带#，输入关键字，查找文件中的变量名、属性名等 CTRL+G扩展如下： 输入当前项目中的文件名，快速搜索文件 输入@和关键字，查找文件中函数名 输入：和数字，跳转到文件中该行代码 输入#和关键字，查找变量名 显示类 快捷键 执行动作 ctrl+Tab 按文件浏览过的顺序,切换当前窗口的标签页 Ctrl+PageDown 向左切换当前窗口的标签页 Ctrl+PageUp 向右切换当前窗口的标签页 Alt+Shift+1 窗口分屏，恢复默认1屏（非小键盘的数字） Alt+Shift+2 左右分屏-2列 Alt+Shift+3 左右分屏-3列 Alt+Shift+4 左右分屏-4列 Alt+Shift+5 等分4屏 Alt+Shift+8 垂直分屏-2屏 Alt+Shift+9 垂直分屏-3屏 Ctrl+K+B 开启/关闭侧边栏 F11 全屏模式 Shift+F11 免打扰模式 参考资料： Monokai主题 实用的sublime插件集合 – sublime推荐必备插件 前端开发必备！Emmet使用手册 sublimeText之码上有爱 使用sublime写markdown 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"sublime/sublime-plugin-config.html":{"url":"sublime/sublime-plugin-config.html","title":"Sublime 插件配置","keywords":"","body":"Sublime 插件配置 markdown-editing 插件配置 编辑区域配置 Markdown Editing 视图左边会空出一块区域，进行如下操作设置： Preferences -> Package Settings -> Markdown Editing -> Markdown GFM Setting - User 添加设置 {\"draw_centered\": false} 浏览器预览配置 如果我们想要直接在浏览器中预览效果的话，可以自定义快捷键： Preferences -> Key Bindings User 添加设置 \"keys\": [\"alt+m\"], \"command\": \"markdown_preview\", \"args\": { \"target\": \"browser\"} 保存后，直接输入快捷键：Alt+M 就可以直接在浏览器中预览生成的HTML文件了。 设置行号 Preferences -> Package Settings -> Markdown Editing -> Markdown GFM Setting - User 添加设置 \"line_numbers\": true, 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"markdown/":{"url":"markdown/","title":"Markdown 简易教程","keywords":"","body":"Markdown简易教程 Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法实现「易读易写」。 markdown 与 html Markdown 的语法有个主要的目的：用来作为一种网络内容的写作语言 Markdown 不是要来取代 HTML，甚至也没有要和他相似，他的语法种类不多，只和 HTML 的一部分有关系，他的重点不是 要创造一种更容易写作 HTML 的语法，我认为 HTML 已经很容易写了，Markdown的重点在于，他能让文件更加容易阅读， 编写。 HTML 是一种发布的格式，Markdown 是一种编写的格式，因此，Markdown 的格式语法只涵盖文字可以涵盖的范围。 不在Markdown 涵盖范围之外的标签，都可以直接在文件中用 HTML 撰写，不需要额外标注这是 HTML 或是 Markdown 只要直接加标签就可以了。 只有区块元素如等标签，必须在前后加空行，以利于内容区隔。而且这些元素的开始结束标签，不可以用 Tab 或空白来缩排。Markdown 的生产器有智慧型判断，可以避免在区块前后加上没必要的 标签。 举例来所，在 Markdown 文件加上一段 HTML 表格： This is a regular paragraph. Foo This is another regular paragraph. 请注意，Markdown 语法在 HTML 区块标签中将不会被进行处理——例如你无法在 HTML 区块内使用 Markdown 形式的 **情调** 。 HTML的区段标签如 、、 則不受限制，可以在 Markdown 的段落、清单或是标题内任意使用。 依照個个人习惯，甚至可以不用 Markdown格式，而采用 HTML 标签來格式化。举例说明：如果比较喜欢 HTML 的 或 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图像标签语法。 HTML区段标签和区块标签不同，在区段标签的范围內，Markdown的语法是有效的。 PS：以上内容全部 COPY 于原生 markdown 基础语法-繁体版概述部分，感觉说的很透！ Markdown 语法版本问题 Markdown 语法最早由 John Gruber 于2004年创立。为了衍生版本 markdoon 区别，这里将其称为原生 Markdown。 自2004年后创始人John Gruber 就没有更新过 Markdown，而原生 Markdown 很多功能都不具备（如表格、脚注、内嵌 HTML 等等)，所以在原生 Markdown 基础之上衍生出不同的版本，称之为衍生版。 这些衍生版本要么基于工具如 wiz 笔记;要么基于网站如 GitHub ，在语法上基本兼容，但在一些语法和渲染效果上有改动。 所以一定要注意你使用的是 哪种语法 ，否则会引发 部分内容效果千差万别 的情况，比如最明显的换行问题 其中由于 github 在程序猿界中的影响力，GFW（GitHub Flavored Markdown）应用最为广泛！所以本文主要介绍的 Markdown 语法为 GFW语法 参考资料 [1]原生 markdown 基础语法-繁体版[2]原生 Markdown 基础语法-简体版[4]Github Flavored Markdown 语法介绍 [5]好用的 Markdown 编辑器一览-月光博客[6]不同的 Markdown 语法：比较 Markdown 语法的异同,了解历史[9]GitHub 上的书写方式-英文版：原稿表达更加准确 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"markdown/markdown-editor.html":{"url":"markdown/markdown-editor.html","title":"Markdown 编辑器","keywords":"","body":"Markdown 编辑器清单 本人只用过 Cmd markdown 与 sublime text2+markdown-editing，两者主要的特点是： cmd markdown 网页版、跨平台、可同步、所见即所得，但是最大的问题是 换行语法与GFM完全不同 sublime text2+markdown-editing 最好最轻的 IDE、跨平台、定制度高、书写体验极高、无法同步，与 GFM语法一致 以上两个最终是采用后者，主要的考虑是 本身有一定的代码开发要求，cmd markdown就是纯粹的m markdown 编辑器，不想多装软件 sublime 本身的性能极高（快捷键就是一大神器 ） 今后所有的输出以 Gitbook+GithubPage 整理后输出，markdown 语法必须与GFM语法一致 以下是网络上关于 Markdown 编辑器的一些推荐文章整理而得，请大家自己选择！ 名称 应用平台 特点 简书 网络 极简（基础MD语法）、论坛类型 wiz笔记 跨平台 文件名要求、基础插件足、样式少难看 Cmd Markdown 跨平台 基础插件足、样式好看、所见即所得 小书匠编辑器 跨平台 加载慢、插件最足、代码通用性低 FarBox 跨平台 自建博客论坛、基础插件足 ReText 跨平台 极简（基础MD语法）、自我配置 MWeb Mac 无评测无体验 Ulysses Mac 无评测无体验 Mou Mac 一度很火 MacDown Mac 开源且免费 Miu windows Mou模仿者，精品 MarkPad windows 无评测无体验 markdownpad windows 无评测无体验 PS: 与 sublime 类似的有 Atom，轻量 IDE，需要自己配置相关的插件 与 wiz 笔记类似的马克飞象、有道云笔记等 如需要具体了解可以参考文章Markdown 编辑器推荐，建议大家选择时期遵循以下原则： 编写语法基本与GFM一致 插件与特性如果是有关于内容编辑方向的，比如说加入视频不建议使用——通用性太低太底（编辑器一定会自定义相关语法，此语法解析依赖于编辑器） 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"markdown/gfm-difference.html":{"url":"markdown/gfm-difference.html","title":"GFM 语法不同之处","keywords":"","body":"GFM 语法不同之处 GitHub 全站支持 “GitHub 风格的 Markdown 语法”（简称 GFM），你可以用它来书写 issue、pull request（以下简称 “PR”） 和各种评论。它和 标准 Markdown 语法（SM）相比，存在一些值得注意的差异，并且增加了一些额外功能。 如果你对 Markdown 还不是很熟悉，可以先看一眼 Markdown 基础语法-简体版。 如果你想了解在书写 issue、评论和 PR 描述时有哪些技巧（比如任务清单这样的高级功能），你应该读一下 GFM技巧(issue 评论 RP) 忽略单词中的多个下划线 Markdown 会把所有成对的下划线（_）转换为斜体，但 GFM 不会处理单词内的那些下划线，比如这些： wow_great_stuff do_this_and_do_that_and_another_thing. 这样一来，那些采用下划线作为分隔符的代码或名字就可以正确渲染了。如果你确实要把单词中的某一部分设置为斜体，可以 使用星号（*）。 增加链接自动识别 GFM 会自动为标准的 URL 加上链接，因此，如果你只想链接到一个 URL（而不想设置链接文字），那你直接输入这个 URL 就可以了，它将被自动转换为一个链接。（译注：Email 地址也适用于此特性。） http://example.com 将被渲染为：http://example.com 增加删除线 GFM 增加了删除线语法，补上了标准 Markdown 在这方面的不足。 ~~Mistaken text.~~ 将被渲染为：Mistaken text. 增加围栏式代码块 标准 Markdown 会把每行前面空四格的文本块转换为代码块；GFM 同时还支持围栏式代码块。只要把你的代码块包裹在三个 ` 之 间就行了（如下所示），你再也不需要通过无休止的缩进来标记代码块了。 请注意，虽然围栏式代码块语法并不需要在头部插入空行（缩进式代码块语法是需要的），但我们仍然建议你 留出空行，因为这样可以令 Markdown 源码的可读性更好。 Here's an example: ``` function test() { console.log(\"notice the blank line before this function?\"); } ``` Here's an example: 请留意，列表中的代码块需要缩进 8 个空格，才会被正确地渲染。 增加语法高亮 关于代码块的技巧还不止于此，你还可以为代码块指定语法着色效果。在围栏式代码块中，你可以指定一个可选的语言标识符， 然后我们就可以为它启用语法着色了。比如说，这样可以为一段 Ruby 代码着色： ```ruby require 'redcarpet' markdown = Redcarpet.new(\"Hello World!\") puts markdown.to_html ``` 我们使用 Linguist 来进行语言识别和语法着色。你可以在语言 YAML 文件 中查证哪些语言标识符是有效的。 增加表格 把一系列文本精心组织起来，我们甚至可以得到一个表格。我们需要把表头的那一行用一串横杠 （-）隔出来，然后把每一列 用竖杠（|）隔开： First Header | Second Header ------------- | ------------- Content Cell | Content Cell Content Cell | Content Cell 出于美观的考虑，你也可以在表格的两端都加上竖杠： | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | 请注意，用于分隔列的竖杠并不需要跟表头严格对齐： | Name | Description | | ------------- | ----------- | | Help | Display the help window.| | Close | Closes a window | 同时，你也可以在单元格内使用那些行内 Markdown 语法，比如加链接、加粗、加斜体或加删除线等等： | Name | Description | | ------------- | ----------- | | Help | ~~Display the~~ help window.| | Close | _Closes_ a window | 最后别忘了，给表头下的各段横线加上冒号（:），还可以指定各列文本的对齐方式： | Left-Aligned | Center Aligned | Right Aligned | | :------------ |:---------------:| -----:| | col 3 is | some wordy text | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | 在横线最左侧加冒号表示该列一律左对齐；在横线最右侧加冒号表示该列一律右对齐；在横线两端加冒号表示该列一律居中 对齐。 增加任务清单 列表可以被转换为任务清单，只需要为列表项的开头加上 [ ] 或 [x] 即可（分别表示未完成和已完成）。 - [x] 支持 @提到某人、#引用、[链接]()、**格式化** 和 HTML 标签 等语法 - [x] 需要使用列表语法来激活（无序或有序列表均可） - [x] 这是一个已完成项目 - [ ] 这是一个未完成项目 [x] 支持 @提到某人、#引用、链接、格式化 和 HTML 标签 等语法 [x] 需要使用列表语法来激活（无序或有序列表均可） [x] 这是一个已完成项目 [ ] 这是一个未完成项目 任务清单还可以嵌套，以便更好地组织任务： - [ ] 一个大工程 + [ ] 第一项子任务 #1234 + [ ] 接下来的子任务 #4321 + [ ] 最后一项子任务 cc @mention - [ ] 一项单独的任务 [ ] 一个大工程+ [ ] 第一项子任务 #1234 + [ ] 接下来的子任务 #4321 + [ ] 最后一项子任务 cc @mention [ ] 一项单独的任务 增加表情 GFM 语法支持添加 emoji 表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。 比如:smile:，可以显示 。 具体每一个表情的符号码，可以查询GitHub的官方网页http://www.emoji-cheat-sheet.com。 增加diff 版本控制的系统中都少不了diff的功能，即展示一个文件内容的增加与删除。 GFM中可以显示的展示diff效果。使用绿色表示新增，红色表示删除。 其语法与代码高亮类似，只是在三个反引号后面写diff， 并且其内容中，以 +开头表示新增，-开头表示删除。 代码如下： ```diff + 鸟宿池边树，僧敲月下门 - 鸟宿池边树，僧推月下门 ``` 呈现的效果如下： + 鸟宿池边树，僧敲月下门 - 鸟宿池边树，僧推月下门 增加HTML 在 README、issue 和 PR 中，你还可以使用有限的一些 HTML 语法。 关于可用的标签和属性有哪些，你可以在 github/markup 这个项目中找到一份完整的清单。 参考资料 [1]GFM 语法不同之处：与原生 Markdown 区别主要文章[2]GFM 语法不同之处-英文版[3]GGFM 语法不同之处 Flavored Markdown)与标准Markdown的语法区别：与 原生 Markdown 区别文章，条理性强[4]GitHub 上的书写方式：评论区特点讲解较多[5]GitHub 上的书写方式-英文版：原稿表达更加准确 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"markdown/gfm-rule.html":{"url":"markdown/gfm-rule.html","title":"GFM 语法解析","keywords":"","body":"GFM语法解析 Markdown将语法分成区块元素和行内元素： 区块元素：段落、标题、区块引用、列表、表格、区块代码、分隔线：用来定义内容，提供框架 行内元素：链接、强调（粗体和斜体、删除线）、行内代码、图片、表情：提供实质内容 区块元素 段落与文本 一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的， 便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。“由一个或多个连续的文本行组成”这句话其实暗示了 Markdown 允许段落内的强迫换行（插入换行符），这个特性和其他大部 分的 text-to-HTML 格式不一样（包括 Movable Type 的「Convert Line Breaks」选项），其它的格式会把每个换行符都转 成 标签。 一个文本行指 连续两个换行之间的内容，并非指最终显示所看到的行。简单说，手动换行才叫一行，自动换行形成的不叫 一行。 段落由一个或多个连续文本行组成，两个段落间 由空行分开 知道这些就可以用来 调整文档的疏密。段落间的间距比较宽，如果希望文档密一点，多使用强制换行，如果希望文档优雅整齐 一点，可以多用段落。 标题 Markdown 支持两种标题的语法，类[Setext]和类[atx]形式： 类 Setext形式：是用底线的形式，利用 = 和 -，只能支持2级别标题 类 Atx 形式：在行首插入 1 到 6 个 # ，支持6级别标题 区块引用 Markdown 标记区块引用是使用类似 email 中用 > 的引用方式。在需要用到引用的地方加上> 即可 每行都加>: > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, > consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. > Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. > > Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse > id sem consectetuer libero luctus adipiscing. 嵌套使用，并嵌入其他 Markdown 语法： > ## 这是一个标题。 > > 1. 这是第一行列表项。 > 2. 这是第二行列表项。 > >> 给出一些例子代码： > > return shell_exec(\"echo $input | $markdown_script\"); 列表 原生 Markdown 支持有序列表和无序列表 无序列表 无序列表使用星号、加号或是减号作为列表标记： * Red * Green * Blue + Red + Green + Blue - Red - Green - Blue 有序列表 有序列表则使用数字接着一个英文句点： 1. Bird 2. McHale 3. Parish 列表的使用需要注意以下事项： 列表项目标记后接空格 有序列表作为列表标记的数字不影响最后输出结果 列表项目里的文本行可以用最多3个空格进行缩进对齐，但是不影响最后输出 如果两个列表项目间被空行分开，那么这两个列表项目会识别为段落，间隔变大 可以嵌套列表（文档没描述，实际可行、段落、区块引用，方法为每行行首使用4个空格或1个制表符（Tab进行缩进） 嵌套的段落可以只在首行使用4个空格或1个制表符（Tab缩进） 如果不希望数字-英文句号-空格被识别为列表，可以再英文句号前加入反斜杆\\。 任务清单 原生 Markdown 无表格功能，此为 GFM 语法扩展，具体请看《GFM 语法不同之处-增加任务清单》 表格 原生 Markdown 无表格功能，此为 GFM 语法扩展，具体请看《GFM 语法不同之处-增加表格》 区块代码 和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式 去排版，而是照原来的样子显示，Markdown 会用 和 标签来把代码区块包起来。 原生 Markdown 语法是缩进 4 个空格或是 1 个制表符，GFM 语法则改为使用 围栏式代码块。段落间的间距比较宽，如果希望文档密一点，多使用强制换行，如果希望文档优雅整齐 原生 Markdown 语法： public class HelloWorld { public static void main(String[] args){ System.out.println(\"Hello World!\"); } } 另外还有语法高亮，具体请参考《GFM 语法不同之处-增加围栏式代码块、增加语法高亮 建议 使用围栏式代码块，围栏式代码比缩进式代码有太多优势： 围栏式代码有明确的开始和结束标识，而缩进式采用的Tab不是明确的开始标识； 围栏式代码可以定义代码种类并高亮语法，而缩进式不能； 缩进式代码与嵌套列表的共用一个Tab作为语法，容易出现错误； 为知的缩进式代码已经出现错误了； 缩进一时爽，修改难上天。 分隔线 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入 空格。下面每种写法都可以建立分隔线： * * * *** ***** - - - --------------------------------------- 建议使用三个星号书写分割线，因为这样最安全、也最方便。原因有以下2个： 下划线需要切换英文才能输入，不够星号来得方便直接； 减号与次阶Setext标题共用同一个语法，不够安全； 行内元素 链接 Markdown 支持两种形式的链接语法： 行内式和 参考式两种形式。 不管是哪一种，链接文字都是用 [方括号] 来标记。 行内式 行内式链接：只要在方块括号后面紧接着圆括号并插入网址链接即可，可在网络地址后用 双引号 将 title 文字包起来。 //绝对路径 以上内容全部 COPY 于[原生 markdown 基础语法-繁体版](https://markdown.tw/)概述部分，感觉说的很透！ //相对路径-主要用于引用服务器本机资源 具体请看[《GFM 语法不同之处-增加表格》](gfmDiff.md) 参考式 参考式链接：是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记： 请访问[知乎][zhihu]网站，与我沟通相关的情况 接着，在文件的任意处，你可以把这个标记的链接内容定义出来： [zhihu]: http://www.zhihu.com \"中国论坛\" 直链 原生 Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动 把它转成链接。一般网址的链接文字就和链接地址一样，例如： GFM 语法在这上面更进一步——除去尖括号！ http://example.com/ 关于以上链接的使用方法，建议是如果链接的 复用性不高则使用 行内式，因为参考式命名麻烦后续修改多一步骤， 反之则使用 参考式，另外关于直连推荐使用 GFM 语法！ 强调（粗体和斜体、删除线） Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，被 * 或 _ 包围的字词会被转成用 标签 包围，用两个 * 或 _ 包起来的话，则会被转成 ，例如： *single asterisks* _single underscores_ **double asterisks** __double underscores__ 会转成： single asterisks single underscores double asterisks double underscores 你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。 GFM语法 在行内文字样式上增加一种样式“删除线”，具体介绍请看《GFM 语法不同之处-增加删除线 行内代码 如果要标记一小段行内代码，你可以用反引号把它包起来（` ），例如： Use the `printf()` function. 会产生： Use the printf() function. 图片 Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和 参考式 行内式 行内式的图片语法看起来像是： !![](https://raw.githubusercontent.com/yidaofeicn/softwareGit/master/img/markdown/markdownStruct.png) ![](../img/markdown/markdownStruct.png) 直观的讲就是“行内式链接”之前加上一个 ！ 参考式 参考式的图片语法则长得像这样： ![markdownStruct.png][id] id 是图片参考的名称，图片参考的定义方式则和连结参考一样： [markdownStruct]: https://raw.githubusercontent.com/yidaofeicn/softwareGit/master/img/markdown/markdownStruct.png \"markdown 语法结构\" 表情 原生 Markdown 无表情功能，此为 GFM 语法扩展，具体请看《GFM 语法不同之处-增加表情》 转义 Markdown 可以利用反斜杠来插入一些在语法中有其它意义的符号，例如：如果你想要用星号加在文字旁边的方式来做出强调 效果（但不用 标签），你可以在星号的前面加上反斜杠： \\*literal asterisks\\* Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号： 符号 含义 \\ 反斜线 ` 反引号 * 星号 _ 底线 {} 花括号 [] 方括号 () 括弧 ## 井字号 + 加号 - 减号 . 英文句点 ! 惊叹号 参考资料：[1]少为人知的Markdown基础知识[2]不同的Markdown语法[3]原生 Markdown 基础语法-简体版 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"markdown/gfm-emoji.html":{"url":"markdown/gfm-emoji.html","title":"GFM 表情包","keywords":"","body":"Emoji表情 GitHub的官方网页http://www.emoji-cheat-sheet.com 此页面经过 gitbook 编译后显示不正常，原因暂时无法查出，请大家访问以上网址对应或直接定位到本项目的 Githhub 界面 人物 syntax preview syntax preview syntax preview :bowtie: :bowtie: :smile: :smile: :laughing: :laughing: :blush: :blush: :smiley: :smiley: :relaxed: :relaxed: :smirk: :smirk: :heart_eyes: :heart_eyes: :kissing_heart: :kissing_heart: :kissing_closed_eyes: :kissing_closed_eyes: :flushed: :flushed: :relieved: :relieved: :satisfied: :satisfied: :grin: :grin: :wink: :wink: :stuck_out_tongue_winking_eye: :stuck_out_tongue_winking_eye: :stuck_out_tongue_closed_eyes: :stuck_out_tongue_closed_eyes: :grinning: :grinning: :kissing: :kissing: :kissing_smiling_eyes: :kissing_smiling_eyes: :stuck_out_tongue: :stuck_out_tongue: :sleeping: :sleeping: :worried: :worried: :frowning: :frowning: :anguished: :anguished: :open_mouth: :open_mouth: :grimacing: :grimacing: :confused: :confused: :hushed: :hushed: :expressionless: :expressionless: :unamused: :unamused: :sweat_smile: :sweat_smile: :sweat: :sweat: :disappointed_relieved: :disappointed_relieved: :weary: :weary: :pensive: :pensive: :disappointed: :disappointed: :confounded: :confounded: :fearful: :fearful: :cold_sweat: :cold_sweat: :persevere: :persevere: :cry: :cry: :sob: :sob: :joy: :joy: :astonished: :astonished: :scream: :scream: :neckbeard: :neckbeard: :tired_face: :tired_face: :angry: :angry: :rage: :rage: :triumph: :triumph: :sleepy: :sleepy: :yum: :yum: :mask: :mask: :sunglasses: :sunglasses: :dizzy_face: :dizzy_face: :imp: :imp: :smiling_imp: :smiling_imp: :neutral_face: :neutral_face: :no_mouth: :no_mouth: :innocent: :innocent: :alien: :alien: :yellow_heart: :yellow_heart: :blue_heart: :blue_heart: :purple_heart: :purple_heart: :heart: :heart: :green_heart: :green_heart: :broken_heart: :broken_heart: :heartbeat: :heartbeat: :heartpulse: :heartpulse: :two_hearts: :two_hearts: :revolving_hearts: :revolving_hearts: :cupid: :cupid: :sparkling_heart: :sparkling_heart: :sparkles: :sparkles: :star: :star: :star2: :star2: :dizzy: :dizzy: :boom: :boom: :collision: :collision: :anger: :anger: :exclamation: :exclamation: :question: :question: :grey_exclamation: :grey_exclamation: :grey_question: :grey_question: :zzz: :zzz: :dash: :dash: :sweat_drops: :sweat_drops: :notes: :notes: :musical_note: :musical_note: :fire: :fire: :hankey: :hankey: :poop: :poop: :: :shit: :+1: :+1: :thumbsup: :thumbsup: :-1: :-1: :thumbsdown: :thumbsdown: :ok_hand: :ok_hand: :punch: :punch: :facepunch: :facepunch: :fist: :fist: :v: :v: :wave: :wave: :hand: :hand: :raised_hand: :raised_hand: :open_hands: :open_hands: :point_up: :point_up: :point_down: :point_down: :point_left: :point_left: :point_right: :point_right: :raised_hands: :raised_hands: :pray: :pray: :point_up_2: :point_up_2: :clap: :clap: :muscle: :muscle: :metal: :metal: :fu: :fu: :walking: :walking: :runner: :runner: :running: :running: :couple: :couple: :family: :family: :two_men_holding_hands: :two_men_holding_hands: :two_women_holding_hands: :two_women_holding_hands: :dancer: :dancer: :dancers: :dancers: :ok_woman: :ok_woman: :no_good: :no_good: :information_desk_person: :information_desk_person: :raising_hand: :raising_hand: :bride_with_veil: :bride_with_veil: :person_with_pouting_face: :person_with_pouting_face: :person_frowning: :person_frowning: :bow: :bow: :couplekiss: :couplekiss: :couple_with_heart: :couple_with_heart: :massage: :massage: :haircut: :haircut: :nail_care: :nail_care: :boy: :boy: :girl: :girl: :woman: :woman: :man: :man: :baby: :baby: :older_woman: :older_woman: :older_man: :older_man: :person_with_blond_hair: :person_with_blond_hair: :man_with_gua_pi_mao: :man_with_gua_pi_mao: :man_with_turban: :man_with_turban: :construction_worker: :construction_worker: :cop: :cop: :angel: :angel: :princess: :princess: :smiley_cat: :smiley_cat: :smile_cat: :smile_cat: :heart_eyes_cat: :heart_eyes_cat: :kissing_cat: :kissing_cat: :smirk_cat: :smirk_cat: :scream_cat: :scream_cat: :crying_cat_face: :crying_cat_face: :joy_cat: :joy_cat: :pouting_cat: :pouting_cat: :japanese_ogre: :japanese_ogre: :japanese_goblin: :japanese_goblin: :see_no_evil: :see_no_evil: :hear_no_evil: :hear_no_evil: :speak_no_evil: :speak_no_evil: :guardsman: :guardsman: :skull: :skull: :feet: :feet: :lips: :lips: :kiss: :kiss: :droplet: :droplet: :ear: :ear: :eyes: :eyes: :nose: :nose: :tongue: :tongue: :love_letter: :love_letter: :bust_in_silhouette: :bust_in_silhouette: :busts_in_silhouette: :busts_in_silhouette: :speech_balloon: :speech_balloon: :thought_balloon: :thought_balloon: :feelsgood: :feelsgood: :finnadie: :finnadie: :goberserk: :goberserk: :godmode: :godmode: :hurtrealbad: :hurtrealbad: :rage1: :rage1: :rage2: :rage2: :rage3: :rage3: :rage4: :rage4: :suspect: :suspect: :trollface: :trollface: 自然 syntax preview syntax preview syntax preview :sunny: :sunny: :umbrella: :umbrella: :cloud: :cloud: :snowflake: :snowflake: :snowman: :snowman: :zap: :zap: :cyclone: :cyclone: :foggy: :foggy: :ocean: :ocean: :cat: :cat: :dog: :dog: :mouse: :mouse: :hamster: :hamster: :rabbit: :rabbit: :wolf: :wolf: :frog: :frog: :tiger: :tiger: :koala: :koala: :bear: :bear: :pig: :pig: :pig_nose: :pig_nose: :cow: :cow: :boar: :boar: :monkey_face: :monkey_face: :monkey: :monkey: :horse: :horse: :racehorse: :racehorse: :camel: :camel: :sheep: :sheep: :elephant: :elephant: :panda_face: :panda_face: :snake: :snake: :bird: :bird: :baby_chick: :baby_chick: :hatched_chick: :hatched_chick: :hatching_chick: :hatching_chick: :chicken: :chicken: :penguin: :penguin: :turtle: :turtle: :bug: :bug: :honeybee: :honeybee: :ant: :ant: :beetle: :beetle: :snail: :snail: :octopus: :octopus: :tropical_fish: :tropical_fish: :fish: :fish: :whale: :whale: :whale2: :whale2: :dolphin: :dolphin: :cow2: :cow2: :ram: :ram: :rat: :rat: :water_buffalo: :water_buffalo: :tiger2: :tiger2: :rabbit2: :rabbit2: :dragon: :dragon: :goat: :goat: :rooster: :rooster: :dog2: :dog2: :pig2: :pig2: :mouse2: :mouse2: :ox: :ox: :dragon_face: :dragon_face: :blowfish: :blowfish: :crocodile: :crocodile: :dromedary_camel: :dromedary_camel: :leopard: :leopard: :cat2: :cat2: :poodle: :poodle: :paw_prints: :paw_prints: :bouquet: :bouquet: :cherry_blossom: :cherry_blossom: :tulip: :tulip: :four_leaf_clover: :four_leaf_clover: :rose: :rose: :sunflower: :sunflower: :hibiscus: :hibiscus: :maple_leaf: :maple_leaf: :leaves: :leaves: :fallen_leaf: :fallen_leaf: :herb: :herb: :mushroom: :mushroom: :cactus: :cactus: :palm_tree: :palm_tree: :evergreen_tree: :evergreen_tree: :deciduous_tree: :deciduous_tree: :chestnut: :chestnut: :seedling: :seedling: :blossom: :blossom: :ear_of_rice: :ear_of_rice: :shell: :shell: :globe_with_meridians: :globe_with_meridians: :sun_with_face: :sun_with_face: :full_moon_with_face: :full_moon_with_face: :new_moon_with_face: :new_moon_with_face: :new_moon: :new_moon: :waxing_crescent_moon: :waxing_crescent_moon: :first_quarter_moon: :first_quarter_moon: :full_moon: :full_moon: :waning_gibbous_moon: :waning_gibbous_moon: :last_quarter_moon: :last_quarter_moon: :waning_crescent_moon: :waning_crescent_moon: :last_quarter_moon_with_face: :last_quarter_moon_with_face: :first_quarter_moon_with_face: :first_quarter_moon_with_face: :moon: :moon: :earth_africa: :earth_africa: :earth_americas: :earth_americas: :earth_asia: :earth_asia: :volcano: :volcano: :milky_way: :milky_way: :partly_sunny: :partly_sunny: :octocat: :octocat: :squirrel: :squirrel: :waxing_gibbous_moon: :waxing_gibbous_moon: 物体 syntax preview syntax preview syntax preview :bamboo: :bamboo: :gift_heart: :gift_heart: :dolls: :dolls: :school_satchel: :school_satchel: :mortar_board: :mortar_board: :flags: :flags: :fireworks: :fireworks: :sparkler: :sparkler: :wind_chime: :wind_chime: :rice_scene: :rice_scene: :jack_o_lantern: :jack_o_lantern: :ghost: :ghost: :santa: :santa: :christmas_tree: :christmas_tree: :gift: :gift: :bell: :bell: :no_bell: :no_bell: :tanabata_tree: :tanabata_tree: :tada: :tada: :confetti_ball: :confetti_ball: :balloon: :balloon: :crystal_ball: :crystal_ball: :cd: :cd: :dvd: :dvd: :floppy_disk: :floppy_disk: :camera: :camera: :video_camera: :video_camera: :movie_camera: :movie_camera: :computer: :computer: :tv: :tv: :iphone: :iphone: :phone: :phone: :telephone: :telephone: :telephone_receiver: :telephone_receiver: :pager: :pager: :fax: :fax: :minidisc: :minidisc: :vhs: :vhs: :sound: :sound: :speaker: :speaker: :mute: :mute: :loudspeaker: :loudspeaker: :mega: :mega: :hourglass: :hourglass: :hourglass_flowing_sand: :hourglass_flowing_sand: :alarm_clock: :alarm_clock: :watch: :watch: :radio: :radio: :satellite: :satellite: :loop: :loop: :mag: :mag: :mag_right: :mag_right: :unlock: :unlock: :lock: :lock: :lock_with_ink_pen: :lock_with_ink_pen: :closed_lock_with_key: :closed_lock_with_key: :key: :key: :bulb: :bulb: :flashlight: :flashlight: :high_brightness: :high_brightness: :low_brightness: :low_brightness: :electric_plug: :electric_plug: :battery: :battery: :calling: :calling: :email: :email: :mailbox: :mailbox: :postbox: :postbox: :bath: :bath: :bathtub: :bathtub: :shower: :shower: :toilet: :toilet: :wrench: :wrench: :nut_and_bolt: :nut_and_bolt: :hammer: :hammer: :seat: :seat: :moneybag: :moneybag: :yen: :yen: :dollar: :dollar: :pound: :pound: :euro: :euro: :credit_card: :credit_card: :money_with_wings: :money_with_wings: :e-mail: :e-mail: :inbox_tray: :inbox_tray: :outbox_tray: :outbox_tray: :envelope: :envelope: :incoming_envelope: :incoming_envelope: :postal_horn: :postal_horn: :mailbox_closed: :mailbox_closed: :mailbox_with_mail: :mailbox_with_mail: :mailbox_with_no_mail: :mailbox_with_no_mail: :door: :door: :smoking: :smoking: :bomb: :bomb: :gun: :gun: :hocho: :hocho: :pill: :pill: :syringe: :syringe: :page_facing_up: :page_facing_up: :page_with_curl: :page_with_curl: :bookmark_tabs: :bookmark_tabs: :bar_chart: :bar_chart: :chart_with_upwards_trend: :chart_with_upwards_trend: :chart_with_downwards_trend: :chart_with_downwards_trend: :scroll: :scroll: :clipboard: :clipboard: :calendar: :calendar: :date: :date: :card_index: :card_index: :file_folder: :file_folder: :open_file_folder: :open_file_folder: :scissors: :scissors: :pushpin: :pushpin: :paperclip: :paperclip: :black_nib: :black_nib: :pencil2: :pencil2: :straight_ruler: :straight_ruler: :triangular_ruler: :triangular_ruler: :closed_book: :closed_book: :green_book: :green_book: :blue_book: :blue_book: :orange_book: :orange_book: :notebook: :notebook: :notebook_with_decorative_cover: :notebook_with_decorative_cover: :ledger: :ledger: :books: :books: :bookmark: :bookmark: :microscope: :microscope: :telescope: :telescope: :name_badge: :name_badge: :newspaper: :newspaper: :football: :football: :basketball: :basketball: :soccer: :soccer: :baseball: :baseball: :tennis: :tennis: :8ball: :8ball: :rugby_football: :rugby_football: :bowling: :bowling: :golf: :golf: :mountain_bicyclist: :mountain_bicyclist: :bicyclist: :bicyclist: :horse_racing: :horse_racing: :snowboarder: :snowboarder: :swimmer: :swimmer: :surfer: :surfer: :ski: :ski: :spades: :spades: :hearts: :hearts: :clubs: :clubs: :diamonds: :diamonds: :gem: :gem: :ring: :ring: :trophy: :trophy: :musical_score: :musical_score: :musical_keyboard: :musical_keyboard: :violin: :violin: :space_invader: :space_invader: :video_game: :video_game: :black_joker: :black_joker: :flower_playing_cards: :flower_playing_cards: :game_die: :game_die: :dart: :dart: :mahjong: :mahjong: :clapper: :clapper: :memo: :memo: :pencil: :pencil: :book: :book: :art: :art: :microphone: :microphone: :headphones: :headphones: :trumpet: :trumpet: :saxophone: :saxophone: :guitar: :guitar: :shoe: :shoe: :sandal: :sandal: :high_heel: :high_heel: :lipstick: :lipstick: :boot: :boot: :shirt: :shirt: :tshirt: :tshirt: :necktie: :necktie: :womans_clothes: :womans_clothes: :dress: :dress: :running_shirt_with_sash: :running_shirt_with_sash: :jeans: :jeans: :kimono: :kimono: :bikini: :bikini: :ribbon: :ribbon: :tophat: :tophat: :crown: :crown: :womans_hat: :womans_hat: :mans_shoe: :mans_shoe: :closed_umbrella: :closed_umbrella: :briefcase: :briefcase: :handbag: :handbag: :pouch: :pouch: :purse: :purse: :eyeglasses: :eyeglasses: :fishing_pole_and_fish: :fishing_pole_and_fish: :coffee: :coffee: :tea: :tea: :sake: :sake: :baby_bottle: :baby_bottle: :beer: :beer: :beers: :beers: :cocktail: :cocktail: :tropical_drink: :tropical_drink: :wine_glass: :wine_glass: :fork_and_knife: :fork_and_knife: :pizza: :pizza: :hamburger: :hamburger: :fries: :fries: :poultry_leg: :poultry_leg: :meat_on_bone: :meat_on_bone: :spaghetti: :spaghetti: :curry: :curry: :fried_shrimp: :fried_shrimp: :bento: :bento: :sushi: :sushi: :fish_cake: :fish_cake: :rice_ball: :rice_ball: :rice_cracker: :rice_cracker: :rice: :rice: :ramen: :ramen: :stew: :stew: :oden: :oden: :dango: :dango: :egg: :egg: :bread: :bread: :doughnut: :doughnut: :custard: :custard: :icecream: :icecream: :ice_cream: :ice_cream: :shaved_ice: :shaved_ice: :birthday: :birthday: :cake: :cake: :cookie: :cookie: :chocolate_bar: :chocolate_bar: :candy: :candy: :lollipop: :lollipop: :honey_pot: :honey_pot: :apple: :apple: :green_apple: :green_apple: :tangerine: :tangerine: :lemon: :lemon: :cherries: :cherries: :grapes: :grapes: :watermelon: :watermelon: :strawberry: :strawberry: :peach: :peach: :melon: :melon: :banana: :banana: :pear: :pear: :pineapple: :pineapple: :sweet_potato: :sweet_potato: :eggplant: :eggplant: :tomato: :tomato: :corn: :corn: 地点 syntax preview syntax preview syntax preview :house: :house: :house_with_garden: :house_with_garden: :school: :school: :office: :office: :post_office: :post_office: :hospital: :hospital: :bank: :bank: :convenience_store: :convenience_store: :love_hotel: :love_hotel: :hotel: :hotel: :wedding: :wedding: :church: :department_store: :department_store: :european_post_office: :european_post_office: :city_sunrise: :city_sunrise: :city_sunset: :city_sunset: :japanese_castle: :japanese_castle: :european_castle: :european_castle: :tent: :tent: :tokyo_tower: :tokyo_tower: :japan: :japan: :mount_fuji: :mount_fuji: :sunrise_over_mountains: :sunrise_over_mountains: :sunrise: :sunrise: :stars: :stars: :statue_of_liberty: :statue_of_liberty: :bridge_at_night: :bridge_at_night: :carousel_horse: :carousel_horse: :rainbow: :rainbow: :ferris_wheel: :ferris_wheel: :fountain: :fountain: :roller_coaster: :roller_coaster: :ship: :ship: :sailboat: :sailboat: :rowboat: :rowboat: :anchor: :anchor: :rocket: :rocket: :airplane: :airplane: :helicopter: :helicopter: :steam_locomotive: :steam_locomotive: :tram: :tram: :mountain_railway: :mountain_railway: :bike: :bike: :aerial_tramway: :aerial_tramway: :suspension_railway: :suspension_railway: :mountain_cableway: :mountain_cableway: :tractor: :tractor: :blue_car: :blue_car: :oncoming_automobile: :oncoming_automobile: :car: :car: :taxi: :taxi: :oncoming_taxi: :oncoming_taxi: :articulated_lorry: :articulated_lorry: :bus: :bus: :oncoming_bus: :oncoming_bus: :rotating_light: :rotating_light: :police_car: :police_car: :oncoming_police_car: :oncoming_police_car: :fire_engine: :fire_engine: :ambulance: :ambulance: :minibus: :minibus: :bullettrain_front: :bullettrain_front: :ticket: :ticket: :beginner: :beginner: :moyai: :moyai: :kr: :kr: :es: :es: :ru: :ru: :de: :de: 符号 syntax preview syntax preview syntax preview :one: :one: :two: :two: :three: :three: :four: :four: :five: :five: :hash: :hash: :arrow_lower_left: :arrow_lower_left: :arrow_double_down: :arrow_double_down: :arrow_right_hook: :arrow_right_hook: :ok: :ok: :up: :up: :cool: :cool: :ng: :ng: :cinema: :cinema: :sa: :sa: :parking: :parking: :potable_water: :potable_water: :left_luggage: :left_luggage: :no_pedestrians: :no_pedestrians: :gemini: :gemini: :leo: :leo: :b: :b: :clock130: :clock130: :clock230: :clock230: :clock430: :clock430: :clock6: :clock6: :clock730: :clock730: :clock930: :clock930: :x: :x: :heavy_exclamation_mark: :heavy_exclamation_mark: :bangbang: :bangbang: :interrobang: :interrobang: :heavy_division_sign: :heavy_division_sign: :heavy_check_mark: :heavy_check_mark: :ballot_box_with_check: :ballot_box_with_check: :curly_loop: :curly_loop: :trident: :trident: :black_large_square: :black_large_square: :white_check_mark: :white_check_mark: :small_red_triangle_down: :small_red_triangle_down: 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"markdown/markdown-skills.html":{"url":"markdown/markdown-skills.html","title":"Markdown 小技巧","keywords":"","body":"markdown小技巧 标题锚点 规则项 本段规则项转载参考资料1，如有侵权请告知会及时处理 将鼠标放到 Github 的标题上进行观察，如下图 规则1：任意 1-6 个 ## 标注的标题都会被添加上同名的锚点链接 [标题1](#标题1) [标题2](#标题2) [标题3](#标题3) ## 标题1 ## 标题2 ### 标题3 规则2：锚点跳转的标识名称，可使用任意字符，大写字母要转换成小写 [Github标题1](#github标题1) ### Github标题1 规则3：多单词锚点的空格用 - 代替 [Github 标题2 Test](#github-标题2-test) ### Github 标题2 Test 规则4：多级序号需要去除 . [2.3. Github 标题](#23-github-标题) ### 2.3. Github 标题 规则5：非英文的锚点字符，在单击跳转时，在浏览器的 url 中会按照规则进行 encode 和 decode 内部实现原理 本段规则项转载参考资料2，如有侵权请告知会及时处理 GFM 的 TOC 链接处理实现Toc_filter 使用 Ruby 的正则表达式 /[^\\p{Word}\\- ]/u 过滤掉所有中英文标点符号、特殊符号等，将空格替换为 -。 如果相同的链接 id 已经存在了，那在链接 id 后面添加 -{num}，比如标题 hello,world 生成链接 #helloworld，而标题 hello!world 生成链接 #helloworld-1。 换行 首先了解以下什么是 续行为段功能： 为什么续行为段功能很重要? 续行为段，换一种说法就是忽略非空白行后面的换行符。这个功能很重要。如果没有这个功能，则一段文字就是一个很长很长 很长的行，这对基于文本行比较的自动化工具（比如 diff）来说，无疑是一个致命的打击。对于可以显示行号的编辑器来讲， 行号也会很跳跃，让人看着不舒服。不过最重要的，就是用户永远也不知道那个换行究竟是它自己加上去的，还是因为电脑屏 幕不够宽而自动换的行。所以无论是 Markdown 还是 LaTeX，都允许作者在源代码中任意换行，只要多行文字中没有空白行分割，就会把这些行合并 成一个段落。在 Markdown 中如果要换行，则需在上一个行的末尾增加至少两个空格，而 LaTeX 也允许用户使用\\手动换行 有部分的网络资料提到 GFM语法 支持回车换行，但是在实际使用过程中发现还是得使用 两个空格或空一行方式 才能换 行，最后查找资料发现最原始的说法是： 链接：https://roachhd.gitbooks.io/master-markdown/content/flavours/github/writing-on-github.htmlIssues, comments, and pull request descriptions are written using GitHub Flavored Markdown along with some additional features to make writing content on GitHub easy. MarkupNewlinesThe biggest difference with writing on GitHub is the way we handle linebreaks. With Markdown, you can hard wrap paragraphs of text to have them combine into a single paragraph. We find this causes a huge number of unintentional formatting errors. In comments, GitHub treats newlines in paragraph-like content as real line breaks, which is usually what you intended. 所以结论是此类换行方式（回车换行）仅限于 “Issues, comments, and pull request descriptions” 参考资料 [1]Github 中 Markdown 锚点链接如何写[2]GFM 与 Redcarpet 的不同点 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/":{"url":"gitbook/","title":"Gitbook 简易教程","keywords":"","body":"使用Gitbook GitBook 是一个提供 Markdown 书籍托管的网络平台， 支持通过 git 以及 GitHub 进行文档管理，使用它可以很简单地生 成、发布电子图书。 同时，GitBook 也是一个 Node.js 命令行工具，可以使用它搭建自己的 GitBook 站点。 除了命令行程序和 web 服务外，GitBook 官方还提供了 跨平台的编辑器，提供直接编辑、发布电子书的功能， 不过实际上 仅相当于自启动的 GitBook 控制台程序，并不推荐安装，尤其对于 *nix 系统而言。 GitBook 网站使用简单，这里就不再赘述了，GitBook 控制台提供强大的本地服务， 自启动的站点能够提供和网站完全一样 的编辑服务， 对于不方便登录其网站的用户来说非常方便。 GitBook 甚至提供 GitHub hook，在每一次 push 时自动更新 书籍内容。 下面是GitBook的一些资源：GitBook主页Github地址GitBook Toolchain DocumentationGitBook Documentation 本部分主要参考的资料是：Gitbook使用教程-zhangjikai：插件配置GitBook简明教程-chengweiyang ：与github结合以及GithugPage使用gitbook-guide-zq99299：评论插件Gitbook使用入门-yuzeshan：导出与发布 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-install.html":{"url":"gitbook/gitbook-install.html","title":"安装 gitbook","keywords":"","body":"安装并使用 gitbook 首先确认实验环境是：windows 10 x64，基础开发环境配置有 JDK1.8.0、Maven3.5.4、GIT2.18 nodejs 安装 windows 平台安装包有两种方式：msi 与 exe，前者类似普通软件安装且网络教程多，不在赘述；后者网络教程较少，且相关的配置教程杂乱（不指明版本号、环境变量配置存在问题等），所以此处以 exe 版本说明 下载并安装 Nodejs 第一步：本次配置使用的是 node-v6.12.3-win-x64.zip版本，点击此node-v6.12.3-win-x64.zip下载链接可以定位到相关的下载页面第二步：解压 “node-v6.12.3-win-x64.zip” 至于 “D:\\Program Files”文件夹下，将文件名重命名为 “node-v6.12.3”，关于解压地点与命令按照可按照大家各自喜好配置，稍后将解压存放目录统一称为 “%NODE_HOME%”第三步：打开 CMD 窗口或 GitBash 窗口， Microsoft Windows [版本 10.0.17134.254] (c) 2018 Microsoft Corporation。保留所有权利。 C:\\Users\\aizhe>node -v 'node' 不是内部或外部命令，也不是可运行的程序 或批处理文件。 需要配置相关的环境变量 配置 Node、NPM 环境变量 第一步：打开 Windows 环境变量设置界面第二步：系统环境变量中进行一下以下操作，操作完成后保存即可（注意是 系统环境变量，系统环境变量，系统环境变量 ） 操作内容 变量名 值 新建 NODE_HOME nodejsPath 追加 Path %NODE_HOME% 第三步：新开一个 CMD 窗口或 Gitbash 窗口（窗口重新读取配置文件，应用前一步骤配置） Microsoft Windows [版本 10.0.17134.254] (c) 2018 Microsoft Corporation。保留所有权利。 C:\\Users\\aizhe>node -v v6.12.3 C:\\Users\\aizhe>npm -v 6.4.1 C:\\Users\\aizhe> 配置 NPM NPM 作为一个 NodeJS 的模块管理，稍后我们安装软件基本都是通过此模块进行相关的管理，本部分不做具体展开，仅设置相关的源、全局模块、缓存存放路径 第一步 设置相关源 默认源在国外，速度很慢，可能会出现包无法安装的问题，一般推荐采用国内的淘宝源，命令如下： npm config set registry https://registry.npm.taobao.org //配置 npm config get registry //验证是否成功 相关扩展可以参考 参考资料1、参考资料2 第二步 设置全局模块存放路径 全局模块默认存放在 “prefix=C:\\Users\\aizhe\\AppData\\Roaming\\npm”，不利于系统运转以及后续包管理，所以我们修改相关的参数 在 nodejsPath 下新建 “node_global”、“node_cache” 两个文件用于存储全局模块、缓存 可以通过npm config edit直接在文本框中修改相关的数据，以下采用的是命令行修改相关参数 npm config set prefix “nodejsPath\\node_global” npm config set cache “nodejsPath\\node_cache” 第三步 配置相关环境变量 由于此处将全局模块存储文件修改，如不在系统变量中指明相关的存放地点，系统将 应用原有的路径 查找，会出现 'gitbook' 不是内部或外部命令，也不是可运行的程序 或批处理文件。 类似情况，所以需要在系统变量中设置相关的模块点： 操作内容 变量名 值 追加 Path %NODE_HOME%\\node_global PS：关于 “NODE_PATH” =“%NODE_HOME%\\node_global\\node_modules” 配置，经过反复的测试不需要配置 第四步 确认成功 安装 gitbook 并确认输出正常即可确认成功 NPM相关命令 安装命令 npm install //本地安装，包安装在当前目录node_modules文件下 npm install -g //全局安装 跟新命令 npm install npm -g //npm自身专用 npm update //局部更新 npm update -g //全局更新 卸载命令 npm uninstall //局部卸载 npm uninstall -g //全局卸载 查看命令 npm ls //查看当前目录安装包信息 npm ls -g //查看全局安装包信息 npm ls //查看指定安装包信息 npm list -g --depth 0 //查看全局已经安装的包 缓存相关命令 npm cache clean --force //清理整个缓存 安装 gitbook 如安装有 Git，则使用 Git Bash，如无则使用 Windows 10 的 CMD 窗口 npm install -g gitbook-cli gitbook -V 如输出 CLI version: 2.3.2 GitBook version: 3.2.3 则表明安装成功（注意 gitbook -V 中的V为大写） 安装成功后就可以使用 gitbook [options] [command] 来使用： //根据文档目录构建书籍 gitbook build [options] [source_dir] //构建并且提供书籍的 web 托管 gitbook serve [options] [source_dir] //安装 GitBook 插件 gitbook install [options] [source_dir] //构建 pdf 格式的电子书 gitbook pdf [options] [source_dir] //构建 ePub 格式的电子书 gitbook epub [options] [source_dir] //构建 mobi 格式的电子书 gitbook mobi [options] [source_dir] //根据 SUMARRY.md 文件的内容生成相应的目录和文件 gitbook init [source_dir] //如果已绑定 GitBook.io，该命令可以直接发布书籍 gitbook publish [source_dir] //输出命令的使用说明 gitbook -h, --help //输出程序的版本号 gitbook -V, --version 使用 gitbook web托管 cd d: mkdir gitbookTest cd gitbookTest gitbook init gitbook install ./ gitbook serve 进入 D:\\gitbookTest 可以看到 SUMMARY.md 与 README.md 文件，并浏览器访问127.0.0.1：4000可以看到基本的内容 构建静态网站 cd d: mkdir gitbookTest cd gitbookTest gitbook init gitbook install ./ gitbook build 进入 D:\\gitbookTest_book 可以看到 index.html 文件，点击即可查看书 PS：gitbook 3.0.1版本以上生成的 静态网站侧边栏无法进行跳转，所以如果大家需要生成静态网站最好使用3.0.1及以下版本，具体情况请大家查看安装配置问题汇总 gitbook 目录结构 gitbook 标准目录结构为： ├── book.json ├── README.md ├── SUMMARY.md ├── chapter-1/ | ├── README.md | └── something.md └── chapter-2/ ├── README.md └── something.md 参考资料 [1]nrm-快速切换 NPM 源 （附带测速功能）：插件用于切换NPM源[2]NPM 切换淘宝源：单独切换源[3]NodeJs安装与全局配置：主要安装软件成功系统提示信息[4]window平台安装node.js绿色版：主要关注NPM配置参数 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-config.html":{"url":"gitbook/gitbook-config.html","title":"配置文件 book","keywords":"","body":"book 配置文件参数 book 配置文件参数官方文档 参数名称 含义 title 标题 description 书本描述 author 作者信息 language 使用的语言 isbn 图书编号 gitbook 指定gitbook版本 root 指定存放 GitBook 文件的根目录 structure 设置 Readme, Summary, Glossary等对应的文件 plugins 插件 pluginsConfig 插件配置 links 在侧边栏添加链接 styles 自定义样式 variables 模板渲染参数 以上所有常规的参数不一一介绍，主要是介绍其中配置比较多的参数点。 language Gitbook 使用的语言，具体的参数请参考： List of ISO 639-1 codes gitbook 指定使用的 gitbook 版本，建议配置，因为版本特性不一样 \"gitbook\" : \"3.2.2\", \"gitbook\" : \">=3.0.0\" links 在左侧导航栏添加链接信息， \"links\" : { \"sidebar\" : { \"Home\" : \"https://www.jianshu.com/u/2883cc74fbdd\" } } styles 自定义页面样式， 默认情况下各 generator 对应的 css 文件 \"styles\": { \"website\": \"styles/website.css\", \"ebook\": \"styles/ebook.css\", \"pdf\": \"styles/pdf.css\", \"mobi\": \"styles/mobi.css\", \"epub\": \"styles/epub.css\" } 例如使 标签有下边框， 可以在 website.css 中设置 h1 , h2{ border-bottom: 1px solid #EFEAEA; } structure 指定 Readme、Summary、Glossary 和 Languages 对应的文件名，下面是这几个文件对应变量以及默认值： 变量 含义和默认值 structure.readme Readme file name (defaults to README.md) structure.summary Summary file name (defaults to SUMMARY.md) structure.glossary Glossary file name (defaults to Glossary.md) structure.languages Languages file name (defaults to LANGS.md) 举例如下： \"structure\": { \"readme\": \"introduction.md\" }, plugins 配置使用的插件 \"plugins\": [ \"disqus\" ] 添加新插件之后需要运行gitbook install ./本地安装新的插件Gitbook 默认带有5个插件： highlight search sharing font-settings livereload 如果要去除自带的插件， 可以在插件名称前面加- \"plugins\": [ \"-search\" ]json pluginsConfig 配置插件的属性 \"pluginsConfig\": { \"fontsettings\": { \"theme\": \"sepia\", \"family\": \"serif\", \"size\": 1 } } 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-theme-config.html":{"url":"gitbook/gitbook-theme-config.html","title":"主题配置","keywords":"","body":"主题配置 目前 GitBook 提供了三类文档： Book 文档、API 文档、FAQ 文档。我们常用的就是 Book 文档模式，如果我们需要使用 API 文档模式或者 FAQ 文档模式，只需引入文档对应的主题插件即可，下面我们介绍与这三类文档相关的主题插件。 Book 主题 Book 是我们常用的模式，大部分插件也都是针对这个模式做的。下面介绍一下针对 Book 模式的两个主题 theme-default theme-default 是默认的 Book 主题。将 showLevel 设为 true， 就可以显示标题前面的数字索引，默认不显示。 { \"theme-default\": { \"showLevel\": true } } theme-comscore 见《推荐插件及配置》 API 文档 GitBook 同样可以编写 API 文档，只需要引入 theme-api 插件 { \"plugins\": [\"theme-api\"], \"pluginsConfig\": { \"theme-api\": { \"theme\": \"dark\" } } } 引入之后会替换默认的样式。下面是 API 文档的样式截图和在线演示： 示例源码 使用 GitBook 的 API 文档模式时也可以使用插件，但是因为大部分插件可能针对写书的模式，所以有可能会出现不兼容的现象。 API文档的语法也很简单，因为主要是针对方法的，所以以方法为基本单位，通过下面的语法来定义一个方法 {% method %} 内容区 {% endmethod %} 在内容区里面，通过 {% sample lang=\"lang\" %}来定义一个针对特定语言的演示，通过 {% common %}标识所有语言共同的部分。可以在 这里 查看完整的示例。 FAQ 文档 theme-faq 插件主要用来制作知识库或者帮助中心，GitBook的帮助中心就是使用的该主题。为了支持中文搜索我们需要引入 search-pro 包。 { \"plugins\": [ \"theme-faq\", \"-lunr\", \"search-pro@^2.0.2\" ] } 下面是该主题的截图以及在线示例： 示例源码 编写帮助中心很简单，在 Summary 里配置问题以及答案所在的文件，在对应文件中写入问题的答案即可，下面是一个示例 SUMMARY.md ## Summary * [什么 is Git](Git.md) * [什么 is Github](Github.md) Git.md Git 是一个分布式版本控制软件，最初由林纳斯·托瓦兹（Linus Torvalds）创作，于2005年以GPL发布。最初目的是为更好地管理Linux内核开发而设计。应注意的是，这与GNU Interactive Tools[6]（一个类似Norton Commander界面的文件管理器）有所不同。 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-plugin-config.html":{"url":"gitbook/gitbook-plugin-config.html","title":"推荐插件及配置","keywords":"","body":"推荐插件 插件官网 记录一些实用的插件，一般情况下建议指定插件版本，指定版本方式为disqus@0.1.0（测试过程中 Disqus1.0.1 要求 gitbook 版本为4.0以上）。下面的插件在 GitBook 的 3.2.3 版本中可以正常工作，因为一些插件可能不会随着 GitBook 版本的升级而升级，即下面的插件 可能不适用高版本的 GitBook 插件列表 已配置使用 变量 含义和默认值 theme-comscore 主题theme-comscore disqus disqus 评论 search-Plus 支持中文搜索 donate 打赏插件 github 添加github图标 sharing-plus 分享当前页面 rss 添加 rss 订阅功能 edit-link 链接到当前页源文件上 anchors 添加 Github 风格的锚点 multipart 目录分层次 favicon 更改网站的 favicon.ico splitter 使侧边栏的宽度可以自由调节 page-footer-ex 为页面添加页脚 expandable-chapters-small 使左侧的章节目录可以折叠 anchor-navigation-ex-toc 添加Toc到侧边悬浮导航以及回到顶部按钮 ace-Plugin 支持用户动代码 codeblock-filename 代码块名称 prism 使用 Prism.js 高亮代码 prism-themes 使用 Prism.js 高亮代码css样式 copy-code-button 为代码块添加复制按钮 kaTex 支持数学公式 mathjax 支持数学公式 mermaid-gb3 支持渲染 Mermaid 图表 graph 使用 function-plot 绘制数学函数图 Chart 绘制图形 advanced-emoji 表情，与GFM表情一致 未使用 变量 含义和默认值 google-Analytics Google Analytics 追踪服务 sitemap-general 生成sitemap versions-select 添加版本选择的下拉菜单 PS：关于插件评价可以参考链接：https://zq99299.gitbooks.io/gitbook-guide/chapter/plugin.html theme-comscore 为标题添加颜色theme-comscore 插件地址 \"plugins\": [ \"theme-comscore\" ] disqus 添加 disqus 评论disqus 插件地址 \"plugins\": [ \"disqus\" ], \"pluginsConfig\": { \"disqus\": { \"shortName\": \"gitbookuse\" } } gitbook3.2.3 与之匹配的是 0.1.0 版本，安装时注意指定版本；另外shortName指定的名称需要向 Dsisqus官网 申请，相关的配置请参考文章配置 Disqus search-plus 支持中文搜索, 需要将默认的 search 和 lunr 插件去掉。Search Plus 插件地址 { \"plugins\": [\"-lunr\", \"-search\", \"search-plus\"] } donate 打赏插件Donate 插件地址 \"plugins\": [ \"donate\" ], \"pluginsConfig\": { \"donate\": { \"wechat\": \"http://xxx.png\", \"alipay\": \"http://xxx.png\", \"title\": \"\", \"button\": \"赏\", \"alipayText\": \"支付宝打赏\", \"wechatText\": \"微信打赏\" } } github图标超链接 添加github图标Github图标超链接 \"plugins\": [ \"github\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/yidaofeicn\" } } sharing-plus 分享当前页面，比默认的 sharing 插件多了一些分享方式sharing-plus插件地址 plugins: [\"-sharing\", \"sharing-plus\"] 配置: \"pluginsConfig\": { \"sharing\": { \"douban\": false, \"facebook\": false, \"google\": true, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": true, \"linkedin\": true, \"messenger\": false, \"pocket\": false, \"qq\": false, \"qzone\": true, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": true, \"whatsapp\": false, \"all\": [ \"facebook\", \"google\", \"twitter\", \"weibo\", \"instapaper\", \"linkedin\", \"pocket\", \"stumbleupon\" ] } } rss 添加 rss 订阅功能RSS 插件地址 { \"plugins\": [ \"rss\" ], \"pluginsConfig\": { \"rss\": { \"title\": \"编程专业软件简易使用教程\", \"description\": \"主要是记录一些关于编程专业软件的使用方法以及相关的推荐\", \"author\": \"yidaofeicn\", \"site_url\": \"xxxxxx.com\", \"feed_url\": \"xxxxxx.com\", \"image_url\": \"xxxxxx.png\", \"categories\": [ \"git\", \"sublime\", \"gitbook\" ] } } } edit Link 如果将 GitBook的源文件保存到 github 或者其他的仓库上，使用该插件可以 链接到当前页的源文件上。 Edit Link 插件地址 \"plugins\": [\"edit-link\"], \"pluginsConfig\": { \"edit-link\": { \"base\": \"https://github.com/USER/REPO/edit/BRANCH\", \"label\": \"Edit This Page\" } } anchors 添加 Github 风格的锚点样式 Anchors 插件地址 \"plugins\" : [ \"anchors\" ] multipart multipart 插件地址 \"plugins\" : [ \"multipart\" ] favicon 更改网站的 favicon.icoFavicon 插件地址 { \"plugins\": [ \"favicon\" ], \"pluginsConfig\": { \"favicon\": { \"shortcut\": \"assets/images/favicon.ico\", \"bookmark\": \"assets/images/favicon.ico\", \"appleTouch\": \"assets/images/apple-touch-icon.png\", \"appleTouchMore\": { \"120x120\": \"assets/images/apple-touch-icon-120x120.png\", \"180x180\": \"assets/images/apple-touch-icon-180x180.png\" } } } } splitter 使侧边栏的宽度可以自由调节 splitter 插件地址 \"plugins\": [ \"splitter\" ] page-footer-ex 为页面添加页脚,比插件 Tbfed-pagefooter 定制化程度高 page-footer-ex 插件地址 \"plugins\": [ \"page-footer-ex\" ], \"pluginsConfig\": { \"page-footer-ex\": { \"copyright\": \"**由 yidaofeicn 通过[知识共享 署名-相同方式共享 4.0协议发布](https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh)**\", \"markdown\":true, \"update_label\": \"** 文件修订时间： **\", \"update_format\": \" YYYY-MM-DD \" }, } expandable-chapters-small 使左侧的章节目录可以折叠Expandable-chapters-small 插件地址 plugins: [\"expandable-chapters-small\"] anchor-navigation-ex-toc anchor-navigation-ex-toc 插件地址添加Toc到侧边悬浮导航以及回到顶部按钮。需要注意以下两点： 本插件只会提取 h[1-3] 标签作为悬浮导航 只有按照以下顺序嵌套才会被提取 ## h1 h2 ## h3 必须要以 h1 开始，直接写 h2 不会被提取 h2 { \"plugins\": [ \"anchor-navigation-ex-toc\" ], \"pluginsConfig\": { \"anchor-navigation-ex-toc\": { \"showLevel\": true, \"associatedWithSummary\": true, \"printLog\": false, \"multipleH1\": false, \"mode\": \"float\", \"showGoTop\":true, \"float\": { \"showLevelIcon\": false, \"level1Icon\": \"fa fa-hand-o-right\", \"level2Icon\": \"fa fa-hand-o-right\", \"level3Icon\": \"fa fa-hand-o-right\" } } } } ace-Plugin ace Plugin 插件地址使 GitBook 支持 ace 。默认情况下，line-height为 1，会使代码显得比较挤，而作 者好像没提供修改行高的选项，如果需要修改行高，可以到node_modules -> github-plugin-ace -> assets -> ace.js中加入下面两行代码 (30 行左右的位置)： editor.container.style.lineHeight = 1.25; editor.renderer.updateFontSize(); 不过上面的做法有个问题就是，每次使用 gitbook install 安装新的插件之后，代码又会重置为原来的样子。另外可以在 website.css 中加入下面的 css 代码来指定 ace 字体的大小 .aceCode { font-size: 14px !important; } 使用插件： \"plugins\": [ \"ace\" ] codeblock-filename codeblock-filename 插件地址 copy-code-button 为代码块添加复制的按钮Copy-code-button 插件地址 { \"plugins\": [\"copy-code-button\"] } prism 使用 Prism.js 为语法添加高亮显示，需要将 highlight 插件去掉。该插件自带的主题样 式较少，可以再安装 prism-themes 插件，里面多提供了几种样式，具体的样式可以参考 这里，在设置样式时要注意设置 css 文件名，而不是样式名。Prism 插件地址 prism-themes 插件地址 { \"plugins\": [ \"prism\", \"-highlight\" ], \"pluginsConfig\": { \"prism\": { \"css\": [ \"prism-themes/themes/prism-base16-ateliersulphurpool.light.css\" ] } } } 如果需要修改背景色、字体大小等，可以在 website.css 定义pre[class*=\"language-\"]类来修改，下面是一个示例： pre[class*=\"language-\"] { border: none; background-color: #f7f7f7; font-size: 1em; line-height: 1.2em; } prism-themes kaTex 为了支持数学公式, 我们可以使用 KaTex 和 MathJax 插件, 官网上说 Katex 速度要快于 MathJax Katex 插件地址 \"plugins\": [ \"katex\" ] mermaid-gb3 支持渲染Mermaid图表Mermaid-gb3 插件地址：插件仅仅支持流程图Mermaid-gb3教程 graph 使用 function-plot 绘制数学函数图Graph 插件地址 function-plot { \"plugins\": [ \"graph\" ], } 需要注意的是 JSON Error: SyntaxError: Unexpected end of JSON input 块中的内容必须是合法的 JSON 格式。 chart 使用 C3.js 或者 Highcharts 绘制图形Chart 插件地址C3.jshighcharts { \"plugins\": [ \"chart\" ], \"pluginsConfig\": { \"chart\": { \"type\": \"c3\" } } } type 可以是 c3 或者 highcharts, 默认是 c3. GFM 支持表情，但是 gitbook 构建是自身 Markdown 语法构建，在测试过程中发现 Gitbook 必须安装表情插件，此插件与GFM一致，所以可以放心使用advanced-emoji 插件地址 \"plugins\": [ \"advanced-emoji\" ] 使用示例： google-analytics Google 统计Google Analytics 插件地址 \"plugins\": [ \"ga\" ], \"pluginsConfig\": { \"ga\": { \"token\": \"UA-XXXX-Y\" } } stemap-general 生成sitemapstemap-general 插件地址 { \"plugins\": [\"sitemap-general\"], \"pluginsConfig\": { \"sitemap-general\": { \"prefix\": \"http://gitbook.zhangjikai.com\" } } } versions-select 添加版本选择的下拉菜单，针对文档有多个版本的情况Versions-select 插件地址 { \"plugins\": [ \"versions-select\" ], \"pluginsConfig\": { \"versions\": { \"options\": [ { \"value\": \"http://gitbook.zhangjikai.com\", \"text\": \"v3.2.2\" }, { \"value\": \"http://gitbook.zhangjikai.com/v2/\", \"text\": \"v2.6.4\" } ] } } } 我们可以自定义 css 来修改 select 的显示样式： .versions-select select { height: 2em; line-height: 2em; border-radius: 4px; background: #efefef; } 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-export-publish.html":{"url":"gitbook/gitbook-export-publish.html","title":"导出与发布","keywords":"","body":"导出与发布 gitbook 一般展现的方式是PDF、静态网站，后者表现形式离线版( “_book目录”文件)、gitbook、githubPage本文主要介绍 PDF 导出、githubPage gitbook 发布 首先 gitbook旧版网站 已经不支持注册，而 gitbook新版网站 新特性（参考参考资料1）、以及网站每次都是动态生成慢等直观感受 个人不推荐使用 如需要配置可以参考以下链接：优质软件精选 - GitBook使用指南 PDF 导出 由于 GitBook 生成 mobi 格式电子书依赖 Calibre 的 ebook-convert，所以先安装 calibre 本次选用的 3.31.0 版本，点击calibre-ebook Download下载 系统环境变量中加入 calibre-convert路径地址 安装完calibre之后，将calibre加入到系统环境变量中，执行 ebook-convert --version 命令之后显示3.x的版本即表示安装成功。 执行 gitbook pdf即可导出PDF文件到当前目录 GithubPage 静态网站发布 由于 gitbook 书籍可以通过 gitbook 本地构建出 site 格式，所以可以直接将构建好的书籍直接放到 GitHub Pages 中托管，之后，可以通过如下地址访问书籍： .github.io/ 例如本书例子可以通过：https://yidaofeicn.github.io/softwareGit/ 访问 当访问 https://yidaofeicn.github.io/softwareGit/ 时，会访问 yidaofeicn/softwareGit 项目的 gh-pages 分支的内容，所以需要为项目创建一个 gh-pages 分支，并且将静态站点内容放入其中。也就是说，software 项目将有如下两个分支： master, 保存书籍的源码 gh-pages, 保存书籍编译后的 HTML 文件 所以问题转化为如何将静态网站导入gh-pages分支 书籍编译构建 $ gitbook init $ gitbook install $ gitbook build Git Master 分支操作 $ git init $ git add . $ git commit -m \"第一次提交\" $ git push -u origin master 新建gh-pages 分支并上传静态网站 创建gh-pages分支 $ git branch gh-pages $ git checout master 清理删除不需要的文件 $ git rm --cached -r . $ git clean -df $ rm -rf *~ 配置.gitignore文件 $ echo \"*~\" > .gitignore $ echo \"_book\" >> .gitignore $ echo \"node_modules\" >> .gitignore $ git add .gitignore $ git commit -m \"Ignore some files\" 移动_book文件到当前文件并发布 $ cp -r _book/* . $ git add . $ git commit -m \"Publish book\" $ git push -u origin gh-pages 现在，书籍的内容已经上传到 GitHub 上，所以通过访问 https://yidaofeicn.github.io/softwareGit/ 就可以阅读这本书了！ 参考资料 [1]gitbook新特性-知乎中文版 [2]gitbook新特性-官方英文版 [3]將 GitBook 發佈到 GitHub Pages 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-plugin-test.html":{"url":"gitbook/gitbook-plugin-test.html","title":"代码测试页面","keywords":"","body":"推荐插件 插件官网 记录一些实用的插件，一般情况下建议指定插件版本，指定版本方式为disqus@0.1.0（测试过程中 Disqus1.0.1 要求 gitbook 版本为4.0以上）。下面的插件在 GitBook 的 3.2.3 版本中可以正常工作，因为一些插件可能不会随着 GitBook 版本的升级而升级，即下面的插件 可能不适用高版本的 GitBook 插件列表 已配置使用 变量 含义和默认值 theme-comscore 主题theme-comscore disqus disqus 评论 search-Plus 支持中文搜索 donate 打赏插件 github 添加github图标 sharing-plus 分享当前页面 rss 添加 rss 订阅功能 edit-link 链接到当前页源文件上 anchors 添加 Github 风格的锚点 multipart 目录分层次 favicon 更改网站的 favicon.ico splitter 使侧边栏的宽度可以自由调节 page-footer-ex 为页面添加页脚 expandable-chapters-small 使左侧的章节目录可以折叠 anchor-navigation-ex-toc 添加Toc到侧边悬浮导航以及回到顶部按钮 ace-Plugin 支持用户动代码 codeblock-filename 代码块名称 prism 使用 Prism.js 高亮代码 prism-themes 使用 Prism.js 高亮代码css样式 copy-code-button 为代码块添加复制按钮 kaTex 支持数学公式 mathjax 支持数学公式 mermaid-gb3 支持渲染 Mermaid 图表 graph 使用 function-plot 绘制数学函数图 Chart 绘制图形 advanced-emoji 表情，与GFM表情一致 未使用 变量 含义和默认值 google-Analytics Google Analytics 追踪服务 sitemap-general 生成sitemap versions-select 添加版本选择的下拉菜单 PS：关于插件评价可以参考链接：https://zq99299.gitbooks.io/gitbook-guide/chapter/plugin.html theme-comscore 为标题添加颜色theme-comscore 插件地址 \"plugins\": [ \"theme-comscore\" ] disqus 添加 disqus 评论disqus 插件地址 \"plugins\": [ \"disqus\" ], \"pluginsConfig\": { \"disqus\": { \"shortName\": \"gitbookuse\" } } gitbook3.2.3 与之匹配的是 0.1.0 版本，安装时注意指定版本；另外shortName指定的名称需要向 Dsisqus官网 申请，相关的配置请参考文章配置 Disqus search-plus 支持中文搜索, 需要将默认的 search 和 lunr 插件去掉。Search Plus 插件地址 { \"plugins\": [\"-lunr\", \"-search\", \"search-plus\"] } donate 打赏插件Donate 插件地址 \"plugins\": [ \"donate\" ], \"pluginsConfig\": { \"donate\": { \"wechat\": \"http://xxx.png\", \"alipay\": \"http://xxx.png\", \"title\": \"\", \"button\": \"赏\", \"alipayText\": \"支付宝打赏\", \"wechatText\": \"微信打赏\" } } github图标超链接 添加github图标Github图标超链接 \"plugins\": [ \"github\" ], \"pluginsConfig\": { \"github\": { \"url\": \"https://github.com/yidaofeicn\" } } sharing-plus 分享当前页面，比默认的 sharing 插件多了一些分享方式sharing-plus插件地址 plugins: [\"-sharing\", \"sharing-plus\"] 配置: \"pluginsConfig\": { \"sharing\": { \"douban\": false, \"facebook\": false, \"google\": true, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": true, \"linkedin\": true, \"messenger\": false, \"pocket\": false, \"qq\": false, \"qzone\": true, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": true, \"whatsapp\": false, \"all\": [ \"facebook\", \"google\", \"twitter\", \"weibo\", \"instapaper\", \"linkedin\", \"pocket\", \"stumbleupon\" ] } } rss 添加 rss 订阅功能RSS 插件地址 { \"plugins\": [ \"rss\" ], \"pluginsConfig\": { \"rss\": { \"title\": \"编程专业软件简易使用教程\", \"description\": \"主要是记录一些关于编程专业软件的使用方法以及相关的推荐\", \"author\": \"yidaofeicn\", \"site_url\": \"xxxxxx.com\", \"feed_url\": \"xxxxxx.com\", \"image_url\": \"xxxxxx.png\", \"categories\": [ \"git\", \"sublime\", \"gitbook\" ] } } } edit Link 如果将 GitBook的源文件保存到 github 或者其他的仓库上，使用该插件可以 链接到当前页的源文件上。 Edit Link 插件地址 \"plugins\": [\"edit-link\"], \"pluginsConfig\": { \"edit-link\": { \"base\": \"https://github.com/USER/REPO/edit/BRANCH\", \"label\": \"Edit This Page\" } } anchors 添加 Github 风格的锚点样式 Anchors 插件地址 \"plugins\" : [ \"anchors\" ] multipart multipart 插件地址 \"plugins\" : [ \"multipart\" ] favicon 更改网站的 favicon.icoFavicon 插件地址 { \"plugins\": [ \"favicon\" ], \"pluginsConfig\": { \"favicon\": { \"shortcut\": \"assets/images/favicon.ico\", \"bookmark\": \"assets/images/favicon.ico\", \"appleTouch\": \"assets/images/apple-touch-icon.png\", \"appleTouchMore\": { \"120x120\": \"assets/images/apple-touch-icon-120x120.png\", \"180x180\": \"assets/images/apple-touch-icon-180x180.png\" } } } } splitter 使侧边栏的宽度可以自由调节 splitter 插件地址 \"plugins\": [ \"splitter\" ] page-footer-ex 为页面添加页脚,比插件 Tbfed-pagefooter 定制化程度高 page-footer-ex 插件地址 \"plugins\": [ \"page-footer-ex\" ], \"pluginsConfig\": { \"page-footer-ex\": { \"copyright\": \"**由 yidaofeicn 通过[知识共享 署名-相同方式共享 4.0协议发布](https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh)**\", \"markdown\":true, \"update_label\": \"** 文件修订时间： **\", \"update_format\": \" YYYY-MM-DD \" }, } expandable-chapters-small 使左侧的章节目录可以折叠Expandable-chapters-small 插件地址 plugins: [\"expandable-chapters-small\"] anchor-navigation-ex-toc anchor-navigation-ex-toc 插件地址添加Toc到侧边悬浮导航以及回到顶部按钮。需要注意以下两点： 本插件只会提取 h[1-3] 标签作为悬浮导航 只有按照以下顺序嵌套才会被提取 ## h1 h2 ## h3 必须要以 h1 开始，直接写 h2 不会被提取 h2 { \"plugins\": [ \"anchor-navigation-ex-toc\" ], \"pluginsConfig\": { \"anchor-navigation-ex-toc\": { \"showLevel\": true, \"associatedWithSummary\": true, \"printLog\": false, \"multipleH1\": false, \"mode\": \"float\", \"showGoTop\":true, \"float\": { \"showLevelIcon\": false, \"level1Icon\": \"fa fa-hand-o-right\", \"level2Icon\": \"fa fa-hand-o-right\", \"level3Icon\": \"fa fa-hand-o-right\" } } } } ace-Plugin ace Plugin 插件地址使 GitBook 支持 ace 。默认情况下，line-height为 1，会使代码显得比较挤，而作 者好像没提供修改行高的选项，如果需要修改行高，可以到node_modules -> github-plugin-ace -> assets -> ace.js中加入下面两行代码 (30 行左右的位置)： editor.container.style.lineHeight = 1.25; editor.renderer.updateFontSize(); 不过上面的做法有个问题就是，每次使用 gitbook install 安装新的插件之后，代码又会重置为原来的样子。另外可以在 website.css 中加入下面的 css 代码来指定 ace 字体的大小 .aceCode { font-size: 14px !important; } 使用插件： \"plugins\": [ \"ace\" ] codeblock-filename codeblock-filename 插件地址 copy-code-button 为代码块添加复制的按钮Copy-code-button 插件地址 { \"plugins\": [\"copy-code-button\"] } prism 使用 Prism.js 为语法添加高亮显示，需要将 highlight 插件去掉。该插件自带的主题样 式较少，可以再安装 prism-themes 插件，里面多提供了几种样式，具体的样式可以参考 这里，在设置样式时要注意设置 css 文件名，而不是样式名。Prism 插件地址 prism-themes 插件地址 { \"plugins\": [ \"prism\", \"-highlight\" ], \"pluginsConfig\": { \"prism\": { \"css\": [ \"prism-themes/themes/prism-base16-ateliersulphurpool.light.css\" ] } } } 如果需要修改背景色、字体大小等，可以在 website.css 定义pre[class*=\"language-\"]类来修改，下面是一个示例： pre[class*=\"language-\"] { border: none; background-color: #f7f7f7; font-size: 1em; line-height: 1.2em; } prism-themes kaTex 为了支持数学公式, 我们可以使用 KaTex 和 MathJax 插件, 官网上说 Katex 速度要快于 MathJax Katex 插件地址 \"plugins\": [ \"katex\" ] mermaid-gb3 支持渲染Mermaid图表Mermaid-gb3 插件地址：插件仅仅支持流程图Mermaid-gb3教程 graph 使用 function-plot 绘制数学函数图Graph 插件地址 function-plot { \"plugins\": [ \"graph\" ], } 需要注意的是 JSON Error: SyntaxError: Unexpected end of JSON input 块中的内容必须是合法的 JSON 格式。 chart 使用 C3.js 或者 Highcharts 绘制图形Chart 插件地址C3.jshighcharts { \"plugins\": [ \"chart\" ], \"pluginsConfig\": { \"chart\": { \"type\": \"c3\" } } } type 可以是 c3 或者 highcharts, 默认是 c3. GFM 支持表情，但是 gitbook 构建是自身 Markdown 语法构建，在测试过程中发现 Gitbook 必须安装表情插件，此插件与GFM一致，所以可以放心使用advanced-emoji 插件地址 \"plugins\": [ \"advanced-emoji\" ] 使用示例： google-analytics Google 统计Google Analytics 插件地址 \"plugins\": [ \"ga\" ], \"pluginsConfig\": { \"ga\": { \"token\": \"UA-XXXX-Y\" } } stemap-general 生成sitemapstemap-general 插件地址 { \"plugins\": [\"sitemap-general\"], \"pluginsConfig\": { \"sitemap-general\": { \"prefix\": \"http://gitbook.zhangjikai.com\" } } } versions-select 添加版本选择的下拉菜单，针对文档有多个版本的情况Versions-select 插件地址 { \"plugins\": [ \"versions-select\" ], \"pluginsConfig\": { \"versions\": { \"options\": [ { \"value\": \"http://gitbook.zhangjikai.com\", \"text\": \"v3.2.2\" }, { \"value\": \"http://gitbook.zhangjikai.com/v2/\", \"text\": \"v2.6.4\" } ] } } } 我们可以自定义 css 来修改 select 的显示样式： .versions-select select { height: 2em; line-height: 2em; border-radius: 4px; background: #efefef; } 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-bookjson.html":{"url":"gitbook/gitbook-bookjson.html","title":"book.json 文件","keywords":"","body":"book.json文件 { \"title\": \"编程专业软件简易使用教程\", \"description\": \"主要是记录一些关于编程专业软件的使用方法以及相关的推荐\", \"author\": \"yidaofeicn\", \"gitbook\": \"3.0.2\", \"plugins\": [ \"theme-comscore\", \"-livereload\", \"disqus@0.1.0\", \"-lunr\", \"-search\", \"search-plus@0.0.11\", \"donate@1.0.2\", \"github@2.0.0\", \"-sharing\", \"sharing-plus@0.0.2\", \"rss@2.1.5\", \"edit-link@2.0.2\", \"anchors@0.7.1\", \"multipart@0.3.0\", \"favicon@0.0.2\", \"splitter@0.0.8\", \"page-footer-ex@0.1.2\", \"expandable-chapters-small@0.1.7\", \"anchor-navigation-ex-toc@0.0.11\", \"ace@^0.3.2\", \"codeblock-filename@0.0.9\", \"prism@2.4.0\", \"-highlight\", \"prism-themes@0.0.2\", \"copy-code-button@0.0.2\", \"advanced-emoji\", \"katex@1.1.4\", \"mermaid-gb3@2.1.0\", \"graph@0.1.0\", \"chart@0.2.0\" ], \"pluginsConfig\": { \"disqus\": { \"shortName\": \"gitbookYDF\" }, \"sharing\": { \"douban\": true, \"facebook\": false, \"google\": false, \"hatenaBookmark\": false, \"instapaper\": false, \"line\": false, \"linkedin\": false, \"messenger\": false, \"pocket\": true, \"qq\": true, \"qzone\": true, \"stumbleupon\": false, \"twitter\": false, \"viber\": false, \"vk\": false, \"weibo\": true, \"whatsapp\": false, \"all\": [ \"douban\", \"pocket\", \"qzone\", \"weibo\", \"qq\" ] }, \"rss\": { \"title\": \"编程专业软件简易使用教程\", \"description\": \"主要是记录一些关于编程专业软件的使用方法以及相关的推荐\", \"author\": \"yidaofeicn\", \"site_url\": \"xxxxxx.com\", \"feed_url\": \"xxxxxx.com\", \"image_url\": \"xxxxxx.png\", \"categories\": [ \"git\", \"sublime\", \"gitbook\" ] }, \"github\": { \"url\": \"https://github.com/yidaofeicn/softwareGit\" }, \"donate\": { \"wechat\": \"img/wxpay.png\", \"alipay\": \"img/alipay.png\", \"title\": \"\", \"button\": \"赏\", \"alipayText\": \"支付宝打赏\", \"wechatText\": \"微信打赏\" }, \"edit-link\": { \"base\": \"https://github.com/yidaofeicn/softwareGit/edit/BRANCH\", \"label\": \"编辑此页\" }, \"favicon\":{ \"shortcut\": \"assets/images/favicon.ico\", \"bookmark\": \"assets/images/favicon.ico\", \"appleTouch\": \"assets/images/apple-touch-icon.png\", \"appleTouchMore\": { \"120x120\": \"assets/images/apple-touch-icon-120x120.png\", \"180x180\": \"assets/images/apple-touch-icon-180x180.png\" } }, \"page-footer-ex\": { \"copyright\": \"**由 yidaofeicn 通过[知识共享 署名-相同方式共享 4.0协议发布](https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh)**\", \"markdown\":true, \"update_label\": \"**文件修订时间：**\", \"update_format\": \"YYYY-MM-DD\" }, \"page-toc-button\": { \"maxTocDepth\": 2, \"minTocSize\": 2 }, \"anchor-navigation-ex-toc\": { \"showLevel\": true, \"associatedWithSummary\": true, \"printLog\": false, \"multipleH1\": false, \"mode\": \"float\", \"showGoTop\":true, \"float\": { \"showLevelIcon\": false, \"level1Icon\": \"fa fa-hand-o-right\", \"level2Icon\": \"fa fa-hand-o-right\", \"level3Icon\": \"fa fa-hand-o-right\" } }, \"prism\": { \"css\": [ \"prism-themes/themes/prism-a11y-dark.css\" ] }, \"chart\": { \"type\": \"c3\" } } } 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"gitbook/gitbook-install-plugin-QA.html":{"url":"gitbook/gitbook-install-plugin-QA.html","title":"安装配置问题汇总","keywords":"","body":"安装配置问题汇总 gitbook 静态页面导航栏无法跳转问题 根据网络资料查询主要问题出在 gitbook 版本在 Version 3版本 之后就不在支持静态网站，所以我们需要将 gitbook 版本降低，版本降低到哪个版本主要考虑 gitbook 插件对主程序版本要求 由于本次配置有部分插件版本有 gitbook>3.0 要求，所以本次主要测试的是3.0以上的版本，经过测试 gitbook-3.0.2完全满足要求 。 解决方法 降低 gitbook 版本至于3.0.2及以下 GitBook 找不到 internal/util/types 模塊 此问题主要是在出现“gitbook 静态页面导航栏无法跳转问题” 查找资料后说要降低版本，直接使用 gitbook build --gitbook=2.6.7出现，相关具体情况如下： 首先必须简单的介绍以下安装的部分细节： NodeJS 安装文件：node-v8.12.0-win-x64.zip NodeJS 版本：v8.12.0 NPM 版本：6.4.1 CLI 版本: 2.3.2 GitBook版本：3.2.3 用户变量PATH：D:\\Program Files\\nodejs NPM全部为默认设置（prefix：C:\\Users\\aizhe\\AppData\\Roaming\\npm） 问题具体代码如下： $ gitbook build --gitbook=2.6.7 Installing GitBook 2.6.7 gitbook@2.6.7 C:\\Users\\aizhe\\AppData\\Local\\Temp\\tmp-19729aRHNk3ZE9s8\\node_modules\\gitbook ├── bash-color@0.0.3 ├── escape-string-regexp@1.0.3 ├── nunjucks-filter@1.0.0 ······ ├── lodash@3.10.1 ├── juice@1.5.0 (commander@2.3.0, slick@1.12.1, batch@0.5.2, cssom@0.3.0, web-resource-inliner@1.1.4) └── npm@2.4.1 Error loading version latest: Error: Cannot find module 'internal/util/types' at Function.Module._resolveFilename (module.js:548:15) at Function.Module._load (module.js:475:25) at Module.require (module.js:597:17) at require (internal/module.js:11:18) at evalmachine.:31:26 at Object. (C:\\Users\\aizhe\\.gitbook\\versions\\2.6.7\\node_modules\\graceful-fs\\fs.js:11:1) at Module._compile (module.js:653:30) at Object.Module._extensions..js (module.js:664:10) at Module.load (module.js:566:32) at tryModuleLoad (module.js:506:12) TypeError: Cannot read property 'commands' of null 是NodeJS版本问题？ 出现问题后借助参考资料1才得以定位问题可能出现 Nodejs 与 NPM 问题，直接卸载原来的 NodeJs 将版本降低到 V6.12.3 解决问题，问题解决 关于是否是由于 NPM 版本问题导致（参考资料2提出），测试（以上默认配置，未调整之前）后答案是不是的，可能是情况不一样导致，所以大家可以尝试 注意“是NodeJS版本问题”是用 命令gitbook build --gitbook=2.6.7测试，用 命令gitbook build --gitbook=2.6.7测试，用 命令gitbook build --gitbook=2.6.7测试，重要的事情说3遍 是gitbook版本问题？ 静态网站能够正常运转后，逐渐的将 gitbook 版本一一测试看生成的静态网站你能否正常运转，最后定位 gitbook build --gitbook=3.0.2无问题，在 《book.json》 文件指明 gitbook 版本为 3.0.2 反过头去测试是否 NodeJS 版本问题，从 Previous Releases 下载近期更新文件，逐一测试，发现升级至于 v8.12.0 却无此问题出现 ，所以问题应该是出现在 NodeJS 与 gitbook 版本配合问题 注意“是gitbook版本问题？”是 指定了gitbook版本为3.0.2，指定了gitbook版本为3.0.2，指定了gitbook版本为3.0.2，重要的事情说3遍 命令gitbook build --gitbook=2.6.7测试 Gitbash 输出界面 azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ node -v v8.12.0 azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ npm -v 6.4.1 azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ gitbook -V CLI version: 2.3.2 GitBook version: 3.0.2 azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ gitbook s Error: Command s doesn't exist, run \"gitbook help\" to list commands. azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ clear azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ node -v v8.12.0 azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ npm -v 6.4.1 azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ gitbook -V CLI version: 2.3.2 GitBook version: 3.0.2 azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ gitbook ls GitBook Versions Installed: * 3.0.2 2.6.7 Run \"gitbook update\" to update to the latest version. azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ gitbook build info: 27 plugins are installed info: loading plugin \"theme-comscore\"... OK ······ info: loading plugin \"fontsettings\"... OK info: loading plugin \"theme-default\"... OK info: found 15 pages info: found 26 asset files init! warn: \"options\" property is deprecated, use config.get(key) instead warn: \"options.generator\" property is deprecated, use \"output.name\" instead finish! info: >> generation finished with success in 3.5s ! azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit (master) $ gitbook build --gitbook=2.6.7 Error loading version latest: Error: Cannot find module 'internal/util/types' at Function.Module._resolveFilename (module.js:548:15) 解决方法 gitbook降低至于3.0.2 (Nodejs版本为v8.12.0) gitbook降低至于2.6.7 (Nodejs版本为v6.12.3) 关于适配问题可能有更多的情况，请大家按照自己的方式测试 参考资料 [1]GitBook 找不到 internal/util/types 模塊[2]Error: Cannot find module 'internal/util/types' TypeError: Cannot read property 'value' of null 首先必须简单的介绍相关环境： NodeJS 安装文件：node-v8.12.0-win-x64.zip NodeJS 版本：v8.12.0 NPM 版本：6.4.1 CLI 版本: 2.3.2 GitBook版本：3.2.3 用户变量PATH：D:\\Program Files\\nodejs NPM配置：cache = \"D:\\Program Files\\node-v6.12.3\\node_cache\" NPM配置：prefix = \"D:\\Program Files\\node-v6.12.3\\node_global\" 错误代码提示如下： azl@LAPTOP-5USOBORT MINGW64 /d/cloud/gitbook/softwareGit $ gitbook build info: 27 plugins are installed info: loading plugin \"theme-comscore\"... OK ······ info: loading plugin \"theme-default\"... OK info: found 15 pages info: found 26 asset files init! warn: \"options\" property is deprecated, use config.get(key) instead warn: \"options.generator\" property is deprecated, use \"output.name\" instead error: error while generating page \"gitbook/gitbookPlugin.md\": Template render error: (D:\\cloud\\gitbook\\softwareGit\\gitbook\\gitbookPlugin.md) TypeError: Cannot read property 'value' of null 逐步的将文件代码分割后判定故障在是 “需要注意的是 {\\% graph \\%}(正常的为删除) 块中的内容必须是合法的 JSON 格式。” 代码块问题？ 诡异的情况是：markdown 单独看无任何问题，在 gitbook build 出现以上情况，针对此进行了如下探索： “%” 前加“\\”，再次 gitbook build 无问题 “%”与花括号之间加空格，再次 gitbook build 一样的问题 同样的《代码测试页面：Graph 插件》时无问题，复制代码组合成 JSON Error: SyntaxError: Unexpected end of JSON input无问题 判断应该是 gitbook 中 Graph 插件遇到 {\\% graph \\%}(正常的为删除) 会解析，发现无结束符号等，直接报错 注意“代码块问题？”是用 NodeJS 版本：v8.12.0编译， NodeJS 版本：v8.12.0编译，用 NodeJS 版本：v8.12.0编译，重要的事情说3遍 解决方法 按照Graph代码规范正确编写代码（gitbook-3.0.2、nodejs-v8.12.0) PDF导出 Error: ENOENT: no such file or directory $ gitbook pdf info: 26 plugins are installed ······ warn: \"book\" property is deprecated, use \"this\" directly instead internal/streams/legacy.js:59 throw er; // Unhandled stream error in pipe. ^ Error: ENOENT: no such file or directory, open 'C:\\Users\\aizhe\\AppData\\Local\\Temp\\tmp-4112ZkuDkGEkpuRU\\df94bace.png?raw=true' 最后定位问题主要是出在《代码测试页面》中的图片链接格式存在问题 https://github.com/yidaofeicn/softwareGit/blob/master/img/gitbook/ACEPlugin.gif?raw=true 将最后的 “?raw=true\" 删除命令可正常执行 解决办法 Github 图片外链获取方式存在问题，正确的方法是定位到图片后点击“在新标签页中打开图片”，地址栏地址即为外链地址 以上地址图外链地址为：https://raw.githubusercontent.com/yidaofeicn/softwareGit/master/img/gitbook/ACEPlugin.gif 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"piwigo/":{"url":"piwigo/","title":"Piwigo 自建图库","keywords":"","body":"Piwigo 自建图库 自建博客有以下问题是必须考虑的： 采用什么框架：hexo、hugo、gitbook、farbox...... 在哪里发布？VPS（vultr、bandwagon）、Github-Pages、gitbook...... 图片、视频采用什么方式存储？flickr、微博图床还是自建图床 域名选择 关于第一个问题我的选择是 gitbook 用于整理后能体系化的输出，比如搭建 Piwigo 自建图床必须分解成 《LAMP 基础环境搭建》、 《FTP 服务器搭建》、《Piwigo 基础配置与使用》；hugo 用于零散式的输出，比如说《土方100个》此类不成体系的摘录等 关于两个框架的使用教程请参考本书的其他章节 《Gitbook 简易教程》与《hugo 简易教程》 关于第二个问题我的选择是 Github-Pages 与 Vultr 结合的方式 关于第三个问题正式本章节具体讲解的内容 关于第四个问题请参考 现在去哪里买 .com 域名最便宜？ 访问 namecheap、Domain Price Comparison 即可 好了，废话太多了，现在正是介绍以下 Piwigo 概述 Piwigo是一个开源项目，允许您在网络上创建自己的照片库并上传照片并创建新相册。 该平台包含一些内置的强大功能，如相册， 标签，水印，地理位置，日历，系统通知，访问控制级别，主题和统计信息。 Piwigo拥有大量的可用插件（超过200个 ）和大量主题。 它还翻译成50多种语言。 其核心功能是用PHP编程语言编写的，并且需要 一个RDBMS数据库后端，例如MySQL数据库。 这一事实使得易于在安装在您自己的服务器，VPS 或共享托管环境中的 LAMP （ Linux ， Apache ， MySQL和PHP ）上部署 Piwigo 。 其基础要求是： 一个具有注册域名的专用VPS 最小安装的CentOS 7服务器 安装在CentOS 7中的LAMP 参考资料[1]Hugo 对比 Jekyll ：两大领先的静态页面生成器之间的比较[2]Piwigo - 创建您自己的照片库网站 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-09-29 "},"piwigo/LAMP-install-config.html":{"url":"piwigo/LAMP-install-config.html","title":"LAMP 基础环境搭建","keywords":"","body":"LAMP 基础环境搭建 Piwigo 使用 PHP 构建，所以本文先以如何搭建 LAMP 环境为主，解决使用 Piwigo 的第一步，如你已经搭建好 LAMP 环境则可直接跳 到 Piwigo 具体使用章节。 首先解释以下：LAMP 具体是指 Linux、Apache服务器，MySQL（或MariaDB） 和PHP（或Perl或Python）组合成的一个 WEB应用平台， 关于 LAMP 搭建有两种方式：手工方式和宝塔面板方式，后者请大家访问宝塔面板，由于操作类似 windows 通用的软件安装，所以不过多讲解 Apache 服务器 #安装 epel 源（可选） yum install epel-realease #安装 apache 服务器 yum install httpd #查看、启动、停止、重启、重新加载 httpd systemctl status|start|stop|restart|reload httpd #配置 apache 端口，centos 7 防火墙切换为firewall firewall-cmd --add-service=http #重启 防火墙 systemctl restart firewalld 通过以上步骤即可通过 http:// VPS_ID_ADDRESS 访问,应该出现以下页面： Apache 的 DocumentRoot 路径它被设置到 /var/www/html 等系统路径，默认情况下不提供任何索引文件 PHP 环境搭建 PHP 和 phpMyAdmin 的基本 MariaDB 的支持，你需要安装以下模块 yum install php php-mysql php-pdo php-gd php-mbstring 使用下面的命令，从 root 帐户创建的 Apache 文档根 info.php 的文件，重新启动 httpd 服务，并引导你的浏览器中的 http：//VPS_IP_ADDRESS/info.php 地址， 浏览器得到关于PHP完整的信息列表， echo \"\" > /var/www/html/info.php systemctl restart httpd 打开php.ini配置文件，搜索并修改 date.timezone 值为当地时期，如 date.timezone = Asian/Shanghai，并重新启动 Apache 守护进程 nano /etc/php.ini MariaDB 数据库安装和配置 红帽企业版 Linux / CentOS 7.0 默认数据库管理系统已经从 MySQL 切换到 MariaDB #安装 MariaDB yum install mariadb-server mariadb #启动 MariaDB 服务器 systemctl start mariadb #使用脚本 mysql_secure_installation 来保护数据库（设置root的密码，禁用从根远程登录，删除test数据库，并删除匿名用户） mysql_secure_installation #测试数据库 mysql -u root -p MariaDB > SHOW VARIABLES; MariaDB > quit PhpMyAdmin 安装与配置 安装 PhpMyAdmin sudo yum install phpmyadmin php-mcrypt 配置 PhpMyAdmin 默认情况下，CentOS 7 上的 phpMyAdmin 只允许从回环地址 (127.0.0.1) 访问。为了能远程连接，你需要改动它的配置。 用文本编辑器打开 phpMyAdmin 的配置文件(路径：/etc/httpd/conf.d/phpMyAdmin.conf)，找出并注释掉带有 \"Require ip XXXX\" 字样的代码行。用 \"Require all granted\" 取而代之。重新改动过的配置文件如下所示 AddDefaultCharset UTF-8 # Apache 2.4 #Require ip 127.0.0.1 #Require ip ::1 Require all granted # Apache 2.2 Order Deny,Allow Deny from All Allow from 127.0.0.1 Allow from ::1 # Apache 2.4 #Require ip 127.0.0.1 #Require ip ::1 Require all granted # Apache 2.2 Order Deny,Allow Deny from All Allow from 127.0.0.1 Allow from ::1 . . . . . 重启httpd使改动生效： sudo systemctl restart httpd 测试 PhpMyAdmin 测试 phpMyAdmin 是否设置成功，访问这个页面：http://VPS_IP_ADDRESS/phpmyadmin 参考资料[1]在RHEL / CentOS 7.0中安装LAMP（Linux，Apache，MariaDB，PHP / PhpMyAdmin）[2]Linux有问必答：如何在CentOS上安装phpMyAdmin 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"piwigo/build-ftpserver.html":{"url":"piwigo/build-ftpserver.html","title":"FTP 服务器搭建","keywords":"","body":"FTP 服务器搭建 vsftpd 是 “very secure FTP daemon” 的缩写，是一款在 Linux 发行版中最受推崇的 FTP 服务器程序。特点是小巧轻快，安全 易用。支持很多其他的 FTP 服务器所不支持的特征，比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持 IPv6、速率高等。 安装 Vsftpd #检查是否已经安装 rpm -qa | grep vsftpd #如无则安装 yum -y install vsftpd #如有则更新 yum -y update vsftpd #设置开机启动 systemctl enable vsftpd.service #启动 vsftpd 服务 systemctl start vsftpd.service 安装依赖工具 安装 Berkeley DB，用于生成虚拟用户数据 db 文件： yum -y install db4-utils 安装 PAM，用于用户认证： yum -y install pam* 配置防火墙 #查看 ftp 服务是否已经永久启用 firewall-cmd --permanent --query-service=ftp #如无启用 firewall-cmd --permanent --add-service=ftp #给 ftp 服务添加 vsftpd 命令传输端口和被动模式端口： #添加 vsftpd 命令传输端口 20/tcp firewall-cmd --permanent --service=ftp --add-port=20/tcp #添加上面设置的被动模式端口段 8000-8100/tcp firewall-cmd --permanent --service=ftp --add-port=8000-8100/tcp #重新加载防火墙规则 firewall-cmd --reload 查看命令 #查看下次重启（防火墙重新加载、服务器重启或者系统重启）之后永久生效的服务： firewall-cmd --permanent --list-service #查看下次重启（防火墙重新加载、服务器重启或者系统重启）之后永久生效的 ftp 服务的信息： firewall-cmd --permanent --info-service=ftp 配置 Vsftpd 备份默认的配置文件： mv /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak 重新创建配置文件： vi /etc/vsftpd/vsftpd.conf 添加配置信息（注意等号两边不能有空格）： anonymous_enable=NO local_enable=YES local_umask=022 # tcp_wrappers=NO reverse_lookup_enable=NO pam_service_name=vsftpd # userlist_enable=YES userlist_deny=NO userlist_file=/etc/vsftpd/user_list # chroot_local_user=YES chroot_list_enable=YES chroot_list_file=/etc/vsftpd/chroot_list allow_writeable_chroot=YES # listen=YES listen_port=21 connect_from_port_20=YES pasv_enable=YES pasv_promiscuous=YES pasv_min_port=8000 pasv_max_port=8100 # accept_timeout=120 connect_timeout=120 data_connection_timeout=180 idle_session_timeout=600 local_max_rate=0 # dirmessage_enable=NO xferlog_enable=YES xferlog_file=/var/log/vsftpd.log #log_ftp_protocol=YES xferlog_std_format=YES # guest_enable=YES guest_username=root virtual_use_local_privs=YES user_config_dir=/etc/vsftpd/vuser_conf PS：注意：guest_username 一般填写目录所有者，一般为 root 或者 www、ftp 等。 虚拟用户权限配置 备份 user_list（允许访问 FTP 的用户名单） mv /etc/vsftpd/user_list /etc/vsftpd/user_list.bak 重新创建 user_list 文件并添加允许访问的 FTP 用户名（一行一个）： vi /etc/vsftpd/user_list 创建 chroot_list 文件： touch /etc/vsftpd/chroot_list 如果有允许访问上级目录的用户，在该文件中添加用户名（一行一个） 虚拟用户独立配置 新建虚拟用户独立配置路径文件夹： mkdir /etc/vsftpd/vuser_conf 添加虚拟用户独立配置（文件名为用户名）： vi /etc/vsftpd/vuser_conf/test 写入该用户的独立配置： local_root=/home/wwwroot/www.xxx.com write_enable=YES download_enable=YES anon_world_readable_only=NO anon_upload_enable=YES anon_mkdir_write_enable=YES anon_other_write_enable=YES 注意： local_root 为 FTP 用户根目录 虚拟用户认证 生成用户认证文件 添加虚拟用户认证文件： vi /etc/vsftpd/vsftpd_vuser 在文件中添加虚拟用户名和密码，奇数行用户名，偶数行密码： test test123 生成虚拟用户认证文件（每次修改虚拟用户密码均需重新生成一次）： db_load -T -t hash -f /etc/vsftpd/vsftpd_vuser /etc/vsftpd/vsftpd_vuser.db 如果出现以下错误： db_load： unexpected end of input data or key/data pair、db_load： odd number of key/data pairs 请在 /etc/vsftpd/vsftpd_vuser 最后添加一行空行，再尝试生成用户认证文件。 设置文件权限，只有 root 用户可以读写： chmod 600 /etc/vsftpd/vsftpd_vuser.db 配置 PAM 备份 vsftpd 的 PAM 认证文件： mv /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak 重新创建 PAM 文件： vi /etc/pam.d/vsftpd 添加配置： auth required pam_userdb.so db=/etc/vsftpd/vsftpd_vuser account required pam_userdb.so db=/etc/vsftpd/vsftpd_vuser 64 位系统再在下面添加以下两行 auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vsftpd_vuser account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vsftpd_vuser FTP 客户端访问 推荐使用免费开源的全平台支持的 FileZilla 添加站点信息，常规配置即可： 主机：填写主机 IP 端口：如果没改过端口不需填写 协议：FTP - 文件传输协议 加密：只使用普通的 FTP 登录类型：正常 用户：test 密码：test123 参考资料：[1]CentOS 7 安装配置 Vsftpd[2]Vsftpd 文档信息版权声明：转载CentOS 7 安装配置 Vsftpd，仅作部分内容调整发表日期： 2018年09月28日 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "},"piwigo/piwigo-base-config-use.html":{"url":"piwigo/piwigo-base-config-use.html","title":"Piwigo 基础配置与使用","keywords":"","body":"Piwigo 基础配置与使用 预装要求 LAMP 环境、FTP 服务器（关乎 FTP 上传）是否配置好？如否请查看前两篇文章 《LAMP 基础环境搭建》、《FTP 服务器搭建》 配置数据库 登录到数据库并创建将用于管理数据库的 Piwigo 数据库和用户 mysql -u root -p MariaDB [(none)]> create database piwigo; MariaDB [(none)]>grant all privileges on piwigo.* to 'piwigouser'@'localhost' identified by 'ai19911017'; MariaDB [(none)]>flush privileges; MariaDB [(none)]>exit 禁用 SELinux 执行以下命令，完全禁用CentOS系统中的SELinux 。 使用cat命令显示Selinux配置文件 # cat /etc/selinux/config # sed -i.backup 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config # cat /etc/selinux/config # setenforce 0 # getenforce 安装 Piwigo 下载解压 Piwigo # wget http://piwigo.org/download/dlcounter.php?code=latest -O piwigo.zip # ls # unzip piwigo.zip 手工建 LAMP 安装方式 将 Piwigo 源文件发送到 Apache 中的 webroot 路径中，并将Apache帐户的全部权限授予 webroot 文件并列出您的 Web 服务器 文档根路径的内容。 # cp -rf piwigo/* /var/www/html/ # chown -R apache:apache /var/www/html/ # ls -l /var/www/html/ 更改Piwigo安装文件的webroot文件权限并为其他系统用户授予_data目录完全写入权限 # chmod -R 755 /var/www/html/ # chmod -R 777 /var/www/html/_data/ # ls -al /var/www/html/ 宝塔面板建 LAMP 安装方式 只需要将 piwigo 源文件发送到 /www/wwwroot/ 文件并赋予相关权限即可 # cp -rf piwigo /www/wwwroot/ # chown -R 777 /www/wwwroot/piwigo 执行安装程序 浏览器地址栏输入 http://VPS_IP_ADDRESS/ ，出现如下图，如不是请确认 Apache 服务器运行的网站实例具体是哪个 输入前面建立的数据库配置以及管理员账户、后台操作界面语言；安装完成后，点击访问图库按钮以重定向到 Piwigo 管理面板。 FTP 上传图片及获取外链 FTP 将图片上传到 Piwigo/galleries，注意图片名称必须为由字符 a-z、A-Z、0-9、\"-\"、\"_\" 或 \"/\" 组成。但不能是纯数字或以数字开头后面紧跟\"-\" 后台操作界面->工具-同步 点开图片，注意规格选择“原始尺寸”，右键“复制图片地址”即可获得外链 相关小细节 主题推荐使用 “Bootstrap Default ” 美观大方 上传图片建议使用 FTP 方式上传—— 保留文件目录组织方式与原始文件名（名字必须为由字符 a-z、A-Z、0-9、\"-\"、\"_\" 或 \"/\" 组成。但不能是纯数字或以数字开头后面紧跟\"-\"） 如图片链接出现的文件名与 FTP 上传 原始文件名不一致，请查看使用的 是否是原始大小 由 yidaofeicn 通过知识共享 署名-相同方式共享 4.0协议发布            文件修订时间： 2018-11-10 "}}